<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cwhong&#39;s blog</title>
  
  <subtitle>一饮一啄，皆有定数</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cwhong.top/"/>
  <updated>2019-06-30T06:34:38.309Z</updated>
  <id>https://cwhong.top/</id>
  
  <author>
    <name>cwhong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Typora极简教程</title>
    <link href="https://cwhong.top/2019/06/29/%E6%97%A5%E5%B8%B8/Typora%E6%9E%81%E7%AE%80%E6%95%99%E7%A8%8B/"/>
    <id>https://cwhong.top/2019/06/29/日常/Typora极简教程/</id>
    <published>2019-06-28T16:00:00.000Z</published>
    <updated>2019-06-30T06:34:38.309Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://link.jianshu.com?t=https%3A%2F%2Fpan.baidu.com%2Fs%2F1uIH8ZQE0p4TYbOhgzmwOOQ" target="_blank" rel="noopener"></a><a href="https://link.jianshu.com?t=https%3A%2F%2Fpan.baidu.com%2Fs%2F1uIH8ZQE0p4TYbOhgzmwOOQ" target="_blank" rel="noopener">Typora download</a></p><blockquote><p>” <strong>Markdown</strong> 是一种<strong>轻量级</strong>标记语言，创始人是<strong>约翰·格鲁伯</strong>（John Gruber）。它允许人们 “使用易读易写的纯文本格式编写文档，然后转换成有效的 HTML 文档。”</p></blockquote><h3 id="1-基本操作"><a href="#1-基本操作" class="headerlink" title="1. 基本操作"></a>1. 基本操作</h3><h4 id="1-1-内容目录"><a href="#1-1-内容目录" class="headerlink" title="1.1 内容目录"></a>1.1 内容目录</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[toc]</span><br></pre></td></tr></table></figure><h4 id="1-2-标题"><a href="#1-2-标题" class="headerlink" title="1.2 标题"></a>1.2 标题</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#       一级标题    </span><br><span class="line">##      二级标题    </span><br><span class="line">###     三级标题    </span><br><span class="line">####    四级标题    </span><br><span class="line">#####   五级标题    </span><br><span class="line">######  六级标题</span><br></pre></td></tr></table></figure><h4 id="1-3-引用"><a href="#1-3-引用" class="headerlink" title="1.3 引用"></a>1.3 引用</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用内容1</span><br><span class="line">&gt; 引用内容2</span><br><span class="line">&gt;&gt; 引用内容3</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><blockquote><p>引用内容1<br>引用内容2</p><blockquote><p>引用内容3</p></blockquote></blockquote><h3 id="2-代码"><a href="#2-代码" class="headerlink" title="2. 代码"></a>2. 代码</h3><h4 id="2-1-单行代码"><a href="#2-1-单行代码" class="headerlink" title="2.1 单行代码"></a>2.1 单行代码</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`String str1 = &quot;hello&quot;;`</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p><code>String str1 = &quot;hello&quot;;</code></p><h4 id="2-2-多行代码"><a href="#2-2-多行代码" class="headerlink" title="2.2 多行代码"></a>2.2 多行代码</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​~~~</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>​<del>~</del>java<br>​<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><ul><li>效果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int a = 10;</span><br><span class="line">int b = 20;</span><br></pre></td></tr></table></figure><h3 id="3-列表"><a href="#3-列表" class="headerlink" title="3. 列表"></a>3. 列表</h3><h4 id="3-1-无序列表"><a href="#3-1-无序列表" class="headerlink" title="3.1 无序列表"></a>3.1 无序列表</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 无序列表1</span><br><span class="line">+ 无序列表2</span><br><span class="line">- 无序列表3</span><br></pre></td></tr></table></figure><ul><li><p>效果</p></li><li><p>无序列表1</p></li><li><p>无序列表2</p></li><li><p>无序列表3</p></li></ul><h4 id="3-2-多行无序列表"><a href="#3-2-多行无序列表" class="headerlink" title="3.2 多行无序列表"></a>3.2 多行无序列表</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 多行无序列表1</span><br><span class="line">TAB * 多行无序列表2</span><br><span class="line">TAB TAB * 多行无序列表3</span><br></pre></td></tr></table></figure><ul><li><p>效果</p></li><li><p>多行无序列表1</p><ul><li>多行无序列表2<ul><li>多行无序列表3</li></ul></li></ul></li></ul><h4 id="3-3-有序列表"><a href="#3-3-有序列表" class="headerlink" title="3.3 有序列表"></a>3.3 有序列表</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1\. 有序列表1</span><br><span class="line">2\. 有序列表2</span><br><span class="line">3\. 有序列表3</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><ol><li>有序列表1</li><li>有序列表2</li><li>有序列表3</li></ol><h4 id="3-4-多行有序列表"><a href="#3-4-多行有序列表" class="headerlink" title="3.4 多行有序列表"></a>3.4 多行有序列表</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1\. 多行有序列表1</span><br><span class="line">2\. 多行有序列表2</span><br><span class="line">    1\. 多行有序列表2-1</span><br><span class="line">    2\. 多行有序列表2-2</span><br><span class="line">3\. 多行有序列表3</span><br><span class="line">    1\. 多行有序列表3-1</span><br><span class="line">    2\. 多行有序列表3-2</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><ol><li>多行有序列表1</li><li>多行有序列表2</li><li>多行有序列表2-1</li><li>多行有序列表2-2</li><li>多行有序列表3</li><li>多行有序列表3-1</li><li>多行有序列表3-2</li></ol><h4 id="3-5-任务列表"><a href="#3-5-任务列表" class="headerlink" title="3.5 任务列表"></a>3.5 任务列表</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-[ ] 抽烟</span><br><span class="line">-[x] 喝酒</span><br><span class="line">-[ ] 烫头</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p>-[ ] 抽烟<br>-[x] 喝酒<br>-[ ] 烫头</p><h4 id="3-6-表格"><a href="#3-6-表格" class="headerlink" title="3.6 表格"></a>3.6 表格</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|姓名|性别|年龄|手机号|</span><br><span class="line">|:---|:--:|:--:|---:|</span><br><span class="line">|张三|男|21|18975346876|</span><br><span class="line">|李四|女|23|17789548964|</span><br><span class="line">|王五|男|25|15876513546|</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><table><thead><tr><th>姓名</th><th>性别</th><th>年龄</th><th>手机号</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>21</td><td>18975346876</td></tr><tr><td>李四</td><td>女</td><td>23</td><td>17789548964</td></tr><tr><td>王五</td><td>男</td><td>25</td><td>15876513546</td></tr></tbody></table><h3 id="4-链接"><a href="#4-链接" class="headerlink" title="4. 链接"></a>4. 链接</h3><h4 id="4-1-图片"><a href="#4-1-图片" class="headerlink" title="4.1 图片"></a>4.1 图片</h4><hr><ul><li>语法1（<em>本地图片</em>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[图片上传失败...(image-61fd19-1520850984854)]</span><br></pre></td></tr></table></figure><ul><li>语法2（<em>网络图片</em>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![typora.jpg](https://upload-images.jianshu.io/upload_images/1538862-d91e815790b81e4a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br></pre></td></tr></table></figure><ul><li>效果2</li></ul><p><img src="//upload-images.jianshu.io/upload_images/1538862-d91e815790b81e4a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/539/format/webp" alt="image"></p><h4 id="4-2-超链接"><a href="#4-2-超链接" class="headerlink" title="4.2 超链接"></a>4.2 超链接</h4><hr><ul><li>语法1（<em>行内式链接</em>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度][https://www.baidu.com/]</span><br></pre></td></tr></table></figure><ul><li>效果1</li></ul><p>[百度]<a href="https://link.jianshu.com?t=https%3A%2F%2Fwww.baidu.com%2F%255D" target="_blank" rel="noopener">[https://www.baidu.com/]</a></p><ul><li>语法2（<em>参考式链接</em>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[CSDN][CSDN网址]</span><br><span class="line">[CSDN网址]:https://www.csdn.net/</span><br></pre></td></tr></table></figure><ul><li>效果2</li></ul><p><a href="https://link.jianshu.com?t=https%3A%2F%2Fwww.csdn.net%2F" target="_blank" rel="noopener">CSDN</a></p><ul><li>语法3（<em>自动链接</em>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://github.com/&gt;</span><br></pre></td></tr></table></figure><ul><li>效果2</li></ul><p><a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2F" target="_blank" rel="noopener">https://github.com/</a></p><h3 id="5-其他"><a href="#5-其他" class="headerlink" title="5. 其他"></a>5. 其他</h3><h4 id="5-1-斜体"><a href="#5-1-斜体" class="headerlink" title="5.1 斜体"></a>5.1 斜体</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">_斜体_</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p><em>斜体</em><br><em>斜体</em></p><h4 id="5-2-加粗"><a href="#5-2-加粗" class="headerlink" title="5.2 加粗"></a>5.2 加粗</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br><span class="line">__加粗__</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p><strong>加粗</strong><br><strong>加粗</strong></p><h4 id="5-3-下划线"><a href="#5-3-下划线" class="headerlink" title="5.3 下划线"></a>5.3 下划线</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p><u>下划线</u></p><h4 id="5-4-删除线"><a href="#5-4-删除线" class="headerlink" title="5.4 删除线"></a>5.4 删除线</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p><del>删除线</del></p><h4 id="5-5-分隔线"><a href="#5-5-分隔线" class="headerlink" title="5.5 分隔线"></a>5.5 分隔线</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><hr><hr><hr><h4 id="5-6-注脚"><a href="#5-6-注脚" class="headerlink" title="5.6 注脚"></a>5.6 注脚</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Typora[^1]</span><br><span class="line">[^1]A markdown editor</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p>Typora<sup><a href="#fn1">[1]</a></sup></p><h4 id="5-7-上下标"><a href="#5-7-上下标" class="headerlink" title="5.7 上下标"></a>5.7 上下标</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$3^2=9$</span><br><span class="line">$3^&#123;(3-1)&#125;=9$</span><br><span class="line">$H_2SO_4$</span><br><span class="line">$H_&#123;2SO_4&#125;$</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p>$3^2=9$<br>$3^{(3-1)}=9$<br>$H_2SO_4$</p><p>$H_{2SO_4}$</p><h4 id="5-8-符号的输入"><a href="#5-8-符号的输入" class="headerlink" title="5.8 符号的输入"></a>5.8 符号的输入</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\\   反斜线</span><br><span class="line">\`   反引号</span><br><span class="line">\*   星号</span><br><span class="line">\_   底线</span><br><span class="line">\&#123; \&#125;  花括号</span><br><span class="line">\[ \]  方括号</span><br><span class="line">\( \)  括弧</span><br><span class="line">\#   井字号</span><br><span class="line">\+   加号</span><br><span class="line">\-   减号</span><br><span class="line">\.   英文句点</span><br><span class="line">\!   惊叹号</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><p>\ ` * _ { } [ ] ( ) # + - . !</p><h4 id="5-9-特殊字符"><a href="#5-9-特殊字符" class="headerlink" title="5.9 特殊字符"></a>5.9 特殊字符</h4><hr><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&amp;copy;      版权      </span><br><span class="line">&amp;reg;       注册商标</span><br><span class="line">&amp;trade;     商标</span><br><span class="line">&amp;nbsp;      空格</span><br><span class="line">&amp;amp;       和号</span><br><span class="line">&amp;quot;      引号</span><br><span class="line">&amp;apos;      撇号</span><br><span class="line">&amp;lt;        小于号</span><br><span class="line">&amp;gt;        大于号</span><br><span class="line">&amp;ne;        不等号</span><br><span class="line">&amp;le;        小于等于</span><br><span class="line">&amp;ge;        大于等于</span><br><span class="line">&amp;cent;      分</span><br><span class="line">&amp;pound;     磅</span><br><span class="line">&amp;euro;      欧元</span><br><span class="line">&amp;yen;       元</span><br><span class="line">&amp;sect;      节</span><br><span class="line">&amp;times;     乘号</span><br><span class="line">&amp;divide;    除号</span><br><span class="line">&amp;plusmn;    正负号</span><br></pre></td></tr></table></figure><ul><li><p>效果</p><p>©<br>®<br>™</p><p>&amp;<br>“<br>‘<br>&lt;</p><blockquote></blockquote><p>≠<br>≤<br>≥<br>¢<br>£<br>€<br>¥<br>§<br>×<br>÷<br>±</p></li><li><p>附</p></li></ul><p><a href="https://link.jianshu.com?t=https%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DvUfE2amYdxd0-eyzqayeMFOVKkDRJrtkb1dV1MxyoCEke31DbXM_rb8fy1qDh1o0tqcq9u_fKQG1RRqPKTB_YK%26wd%3D%26eqid%3D8a6c88e90000a679000000035aa6444d" target="_blank" rel="noopener">HTML特殊字符编码对照表</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://link.jianshu.com?t=https%3A%2F%2Fpan.baidu.com%2Fs%2F1uIH8ZQE0p4TYbOhgzmwOOQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;/a&gt;&lt;a href
      
    
    </summary>
    
      <category term="日常" scheme="https://cwhong.top/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="问题解决" scheme="https://cwhong.top/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
      <category term="markdown" scheme="https://cwhong.top/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Python中 sys.argv[]的用法简明解释</title>
    <link href="https://cwhong.top/2019/01/05/%E9%97%AE%E9%A2%98%E9%9A%8F%E7%AC%94/Python%E4%B8%ADsys.argv%5B%5D%E7%9A%84%E7%94%A8%E6%B3%95%E7%AE%80%E6%98%8E%E8%A7%A3%E9%87%8A/"/>
    <id>https://cwhong.top/2019/01/05/问题随笔/Python中sys.argv[]的用法简明解释/</id>
    <published>2019-01-04T16:00:00.000Z</published>
    <updated>2019-01-05T08:44:05.939Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><p>   因为是看书自学的python,开始后不久就遇到了这个引入的模块函数，且一直在IDLE上编辑了后运行，试图<br>从结果发现它的用途，然而结果一直都是没结果，也在网上查了许多，但发现这个问题的比较详细的解释只有一个版本，大部分都是转载和复制的。给的都是简明python教程上那个一长串代码的例子，说看了就明白了，可我看得晕头转向的还是没真正明白，只知道“sys.argv[0]表示代码本身文件路径”这点，其实还是不明其意。后来经过大量努力，多方求教才真正明悟了，谨以记录和分享，希望能从另一个角度给同在求索过程中的同学一点启发。</p><p>　　sys.argv[]说白了就是一个从程序外部获取参数的桥梁，这个“外部”很关键，所以那些试图从代码来说明它作用的解释一直没看明白。因为我们从外部取得的参数可以是多个，所以获得的是一个列表（list)，也就是说sys.argv其实可以看作是一个列表，所以才能用[]提取其中的元素。其第一个元素是程序本身，随后才依次是外部给予的参数。</p><h3 id="1、无参数"><a href="#1、无参数" class="headerlink" title="1、无参数"></a>1、无参数</h3><p>下面我们通过一个极简单的test.py程序的运行结果来说明它的用法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#test.py</span><br><span class="line">2</span><br><span class="line">3 import sys</span><br><span class="line">4 a=sys.argv[0]</span><br><span class="line">5 print(a)</span><br></pre></td></tr></table></figure><p>将test.py保存在c盘的根目录下。</p><p>在程序中找到 ‘运行’-&gt;点击-&gt;输入”cmd”-&gt;回车键   进入控制台命令窗口（如下图），先输入cd c:\   (作用是将命令路径改到c盘根目录)，然后输入test.py运行我们刚刚写的程序：</p><p> <img src="http://upload-images.jianshu.io/upload_images/12110500-1c103e2d161f71f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>得到的结果是C:\test.py，这就是0指代码（即此.py程序）本身的意思。</p><h3 id="2、一个参数"><a href="#2、一个参数" class="headerlink" title="2、一个参数"></a>2、一个参数</h3><p>然后我们将代码中0改为1 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=sys.argv[1]</span><br></pre></td></tr></table></figure><p>保存后，再从控制台窗口运行，这次我们加上一个参数，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># test.py what</span><br></pre></td></tr></table></figure><p> <img src="http://upload-images.jianshu.io/upload_images/12110500-60015287549f78de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p> 得到的结果就是我们输入的参数what，看到这里你是不是开始明白了呢。</p><h3 id="3、多个参"><a href="#3、多个参" class="headerlink" title="3、多个参"></a>3、多个参</h3><p>那我们再把代码修改一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=sys.argv[2：]</span><br></pre></td></tr></table></figure><p>保存后，再从控制台窗台运行程序，这次多加几个参数，以空格隔开:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># test.py a b c d e f</span><br></pre></td></tr></table></figure><p> <img src="http://upload-images.jianshu.io/upload_images/12110500-ea01685559386fe8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>得到的结果为[‘b’, ’c’, ’d’, ’e’, ’f’]</p><p>应该大彻大悟了吧。Sys.argv[ ]其实就是一个列表，里边的项为用户输入的参数，关键就是要明白这参数是从程序外部输入的，而非代码本身的什么地方，要想看到它的效果就应该将程序保存了，从外部来运行程序并给出参数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;   因为是看书自学的python,开始后不久就遇到了这个引入的模块函数，且一直在IDLE上编辑了后运行，试图&lt;br&gt;从结果发现它的用途，然而结果一直都是没结果，也在网上查了许多，但发现这个问题的比较详细的解释只有一个版本，大部分都是转载和复制的
      
    
    </summary>
    
      <category term="问题随笔" scheme="https://cwhong.top/categories/%E9%97%AE%E9%A2%98%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="问题解决" scheme="https://cwhong.top/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
      <category term="python" scheme="https://cwhong.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="https://cwhong.top/2018/12/31/%E9%97%AE%E9%A2%98%E9%9A%8F%E7%AC%94/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>https://cwhong.top/2018/12/31/问题随笔/科学上网/</id>
    <published>2018-12-30T16:00:00.000Z</published>
    <updated>2019-01-05T08:44:27.283Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>原本文章写的是SSR教程，但因为SSR项目因为某些原因已经关闭，考虑到大部分用户的需求SS完全能够满足便将本教程修改为了SS，即Shadowsocks。</strong></p></blockquote><p>首先要购买国外主机，我个人推荐使用vlutr，价格和速度都比较理想，最近 vultr 2.5刀/月的vps部分地区缺货，其他的主机厂商大家也可以尝试，如<a href="https://bandwagonhost.com/aff.php?aff=18843" target="_blank" rel="noopener">搬瓦工</a>(年付比较划算)</p><p>如果选择了vultr的话，请点击以下图片去注册(其实是我的推广链接(●’◡’●))</p><p><a href="https://www.vultr.com/?ref=7100024" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/12110500-fd85e3dbc91d1098.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></a></p><p>下面以vultr为例讲解整个流程：</p><h3 id="一、购买主机"><a href="#一、购买主机" class="headerlink" title="一、购买主机"></a>一、购买主机</h3><p>首先注册</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-d48c1b60a0cbe186.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>然后充值，vultr从去年起支持支付宝支付，支付金额的话随意选，也可以自定义金额，最近好像有优惠：新用户不定时有优惠，以前新用户关注vultr推特是有三美元奖励的，这些大家可以自行了解。</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-59dae911b51f12c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p> 充值完毕后我们点击右上角的那个加号来购买我们的VPS，</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-5a00cfbda4eb2e1b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>然后选择服务器位置、系统及配置</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-87e92ed08787c1fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>选64位的Debian8，</p><p><img src="http://upload-images.jianshu.io/upload_images/12110500-8dffd400ff6b9c23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="vultr_ssr_05"></p><p>然后选择服务器配置，选最便宜的2.5美元/月，售罄的话就没办法了，换个位置，改买5刀/月的或者换别的商家吧，注意不要选择仅能使用ipv6的服务器，点击deploy now完成购买，</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-0a82848a323ec5f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>进入控制台就能看到我们刚买的服务器了，等几分钟后系统装完我们就点击进入详情页面查看，</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-f4b5b661296801f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>记住ip地址、把密码复制下来</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-bf5090ae4f7ef057.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>现在我们要做的就是连接到我们的服务器，现在我们需要一个ssh客户端，xshell，putty都是可以的，软件请自行通过网络下载，这里提供两篇教程以供参考：<a href="https://jingyan.baidu.com/article/454316ab5dd974f7a7c03a18.html" target="_blank" rel="noopener">putty教程</a>  <a href="https://jingyan.baidu.com/article/ab69b270b0ca3d2ca7189fdc.html" target="_blank" rel="noopener">xshell教程</a></p><p>请以root用户登录到服务器，我这里使用的是Ubuntu自带的ssh客户端</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-2e53c184a5f502c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>接下来就跟着下面的步骤安装SS</p><h3 id="二、SS一键安装"><a href="#二、SS一键安装" class="headerlink" title="二、SS一键安装"></a>二、SS一键安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># wget --no-check-certificate -O shadowsocks-go.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh</span><br><span class="line"># chmod +x shadowsocks-go.sh</span><br><span class="line"># ./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log</span><br></pre></td></tr></table></figure><p>把上面的三行代码依次复制进终端然后回车，接着按照提示进行操作，可根据个人喜好设置密码和端口以及加密方式等等，也可以直接回车使用默认设置（这里使用的是秋水逸冰大佬的脚本）<br><img src="https://upload-images.jianshu.io/upload_images/12110500-a2a5eb456b4bc12f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-9b71d188b8a0badb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-637e4a954c3feb1b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>设置密码。。。</p><p><img src="http://upload-images.jianshu.io/upload_images/12110500-bcee62d3942eed67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>设置端口</p><p><img src="http://upload-images.jianshu.io/upload_images/12110500-961fce74e12e58ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>加密方式选默认直接回车</p><p><img src="http://upload-images.jianshu.io/upload_images/12110500-6beafb3d2c2b9a28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>然后等待安装完成</p><p>安装完后会显示SSR的配置信息，一定要记下来哦</p><p><img src="http://upload-images.jianshu.io/upload_images/12110500-e3e44af7b590a8c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h3 id="三、锐速优化"><a href="#三、锐速优化" class="headerlink" title="三、锐速优化"></a>三、锐速优化</h3><p>锐速用于给服务器加速，可以跳过，试用之后感觉速度太慢再安装</p><p>锐速破解版安装，来自91云</p><p>PS：锐速不支持openvz的服务器，如果你购买的是搬瓦工，一定要注意选择kvm而不是openvz</p><p>脚本一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># wget -N --no-check-certificate https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh &amp;&amp; bash serverspeeder.sh</span><br></pre></td></tr></table></figure><p>备用脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure><p>这里跟SS相同，只要把复制代码运行即可，</p><p>中间可能会让你选择内核版本及锐速版本根据提示选择即可</p><p><img src="http://upload-images.jianshu.io/upload_images/12110500-4b7367581261f19b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>这样就算安装完了<a href="http://www.srookie.cn/wp-content/uploads/2017/07/Screenshot-from-2017-07-25-14-50-24.png" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/12110500-5b2adc1dc0043254.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="vultr_ssr_17"></a></p><p>安装完毕后就大功告成了，找到对应的客户端版本并安装，然后按照上面记下来的配置信息连接到你的SSR服务器就好了！</p><p><a href="https://github.com/shadowsocks/shadowsocks-android/releases/download/v4.6.1/shadowsocks--universal-4.6.1.apk" target="_blank" rel="noopener"> Shadowsocks Android版下载</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases/download/4.1.0/Shadowsocks-4.1.0.zip" target="_blank" rel="noopener"> Shadowsocks Windows版下载</a></p><p>iOS的就自己想办法吧╮(╯▽╰)╭，用wingy或者shadowrocket都是极好的</p><p>最后附一张YouTube 1080p 截图，祝大家翻墙愉快！</p><p><img src="https://upload-images.jianshu.io/upload_images/12110500-ffa9db0cfb9201f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;原本文章写的是SSR教程，但因为SSR项目因为某些原因已经关闭，考虑到大部分用户的需求SS完全能够满足便将本教程修改为了SS，即Shadowsocks。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先要购买国外主机
      
    
    </summary>
    
      <category term="问题随笔" scheme="https://cwhong.top/categories/%E9%97%AE%E9%A2%98%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="问题解决" scheme="https://cwhong.top/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cwhong.top/2018/12/25/hello-world/"/>
    <id>https://cwhong.top/2018/12/25/hello-world/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2019-07-09T10:51:55.549Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="一-Ahead"><a href="#一-Ahead" class="headerlink" title="一. Ahead"></a>一. Ahead</h2><h3 id="1-1-Install-git-ubuntu"><a href="#1-1-Install-git-ubuntu" class="headerlink" title="1.1 Install git(ubuntu)"></a>1.1 Install git(ubuntu)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install git</span><br></pre></td></tr></table></figure><h3 id="1-2-Configuring-git-environmen"><a href="#1-2-Configuring-git-environmen" class="headerlink" title="1.2 Configuring git environmen"></a>1.2 Configuring git environmen</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email “cwhong_top@163.com”</span><br><span class="line">$ git config --global user.name “cwhongtop”</span><br></pre></td></tr></table></figure><h3 id="1-3-New-SSH-Keys"><a href="#1-3-New-SSH-Keys" class="headerlink" title="1.3 New SSH Keys"></a>1.3 New SSH Keys</h3><ul><li><p>Check ssh keys</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>new ssh keys</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C cwhong_top@163.com</span><br></pre></td></tr></table></figure></li><li><p>display ssh keys</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>Then add ssh keys to your github</p><blockquote><p>在github首页右上角点击头像，选择Settings，然后选择New SSH KEY，把上面一步id_rsa.pub文件的秘钥复制进去就好了。</p></blockquote></li></ul><h3 id="1-4-Configuring-git-environmen-in-hexo’s-config-yml"><a href="#1-4-Configuring-git-environmen-in-hexo’s-config-yml" class="headerlink" title="1.4 Configuring git environmen in hexo’s config.yml"></a>1.4 Configuring git environmen in hexo’s config.yml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: git@github.com:cwhongtop/cwhongtop.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h2 id="二-Quick-Start"><a href="#二-Quick-Start" class="headerlink" title="二. Quick Start"></a>二. Quick Start</h2><h3 id="2-1-Install-hexo"><a href="#2-1-Install-hexo" class="headerlink" title="2.1 Install hexo"></a>2.1 Install hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo -g</span><br></pre></td></tr></table></figure><h3 id="2-2-Create-a-new-post"><a href="#2-2-Create-a-new-post" class="headerlink" title="2.2 Create a new post"></a>2.2 Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="2-3-Run-server"><a href="#2-3-Run-server" class="headerlink" title="2.3 Run server"></a>2.3 Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="2-4-Generate-static-files"><a href="#2-4-Generate-static-files" class="headerlink" title="2.4 Generate static files"></a>2.4 Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="2-5-Deploy-to-remote-sites"><a href="#2-5-Deploy-to-remote-sites" class="headerlink" title="2.5 Deploy to remote sites"></a>2.5 Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="开源项目" scheme="https://cwhong.top/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="开源项目" scheme="https://cwhong.top/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>csp-2017-09-02-公共钥匙盒</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/csp-2017-09-02%E5%85%AC%E5%85%B1%E9%92%A5%E5%8C%99%E7%9B%92/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/csp-2017-09-02公共钥匙盒/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:09:10.936Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>试题编号：    201709-2<br>试题名称：    公共钥匙盒<br>时间限制：    1.0s<br>内存限制：    256.0MB<br>问题描述：<br>　　有一个学校的老师共用N个教室，按照规定，所有的钥匙都必须放在公共钥匙盒里，老师不能带钥匙回家。每次老师上课前，都从公共钥匙盒里找到自己上课的教室的钥匙去开门，上完课后，再将钥匙放回到钥匙盒中。<br>　　钥匙盒一共有N个挂钩，从左到右排成一排，用来挂N个教室的钥匙。一串钥匙没有固定的悬挂位置，但钥匙上有标识，所以老师们不会弄混钥匙。<br>　　每次取钥匙的时候，老师们都会找到自己所需要的钥匙将其取走，而不会移动其他钥匙。每次还钥匙的时候，还钥匙的老师会找到最左边的空的挂钩，将钥匙挂在这个挂钩上。如果有多位老师还钥匙，则他们按钥匙编号从小到大的顺序还。如果同一时刻既有老师还钥匙又有老师取钥匙，则老师们会先将钥匙全还回去再取出。<br>　　今天开始的时候钥匙是按编号从小到大的顺序放在钥匙盒里的。有K位老师要上课，给出每位老师所需要的钥匙、开始上课的时间和上课的时长，假设下课时间就是还钥匙时间，请问最终钥匙盒里面钥匙的顺序是怎样的？<br>输入格式<br>　　输入的第一行包含两个整数N, K。<br>　　接下来K行，每行三个整数w, s, c，分别表示一位老师要使用的钥匙编号、开始上课的时间和上课的时长。可能有多位老师使用同一把钥匙，但是老师使用钥匙的时间不会重叠。<br>　　保证输入数据满足输入格式，你不用检查数据合法性。<br>输出格式<br>　　输出一行，包含N个整数，相邻整数间用一个空格分隔，依次表示每个挂钩上挂的钥匙编号。<br>样例输入<br>5 2<br>4 3 3<br>2 2 7<br>样例输出<br>1 4 3 2 5<br>样例说明<br>　　第一位老师从时刻3开始使用4号教室的钥匙，使用3单位时间，所以在时刻6还钥匙。第二位老师从时刻2开始使用钥匙，使用7单位时间，所以在时刻9还钥匙。<br>　　每个关键时刻后的钥匙状态如下（X表示空）：<br>　　时刻2后为1X345；<br>　　时刻3后为1X3X5；<br>　　时刻6后为143X5；<br>　　时刻9后为14325。<br>样例输入<br>5 7<br>1 1 14<br>3 3 12<br>1 15 12<br>2 7 20<br>3 18 12<br>4 21 19<br>5 30 9<br>样例输出<br>1 2 3 5 4<br>评测用例规模与约定<br>　　对于30%的评测用例，1 ≤ N, K ≤ 10, 1 ≤ w ≤ N, 1 ≤ s, c ≤ 30；<br>　　对于60%的评测用例，1 ≤ N, K ≤ 50，1 ≤ w ≤ N，1 ≤ s ≤ 300，1 ≤ c ≤ 50；<br>　　对于所有评测用例，1 ≤ N, K ≤ 1000，1 ≤ w ≤ N，1 ≤ s ≤ 10000，1 ≤ c ≤ 100。</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>注：因为同一个老师一定是先借钥匙再还钥匙，所以借与还不存在矛盾，将所有老师借钥匙与还钥匙按时间排序，并且同时有多个老师还钥匙时按钥匙编号顺序排序，然后按序进行借与还的操作。本题中使用结构体，以及比较函数用sort进行排序操作。最终结果只得70分，有待后续改进。</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">/*****************************************</span><br><span class="line">Filename:Main</span><br><span class="line">Author:cwhong</span><br><span class="line">Date:2018.07.06</span><br><span class="line">Description:csp2017-09-2,公共钥匙盒</span><br><span class="line"></span><br><span class="line">******************************************/</span><br><span class="line"></span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int key[1001];</span><br><span class="line"></span><br><span class="line">typedef struct Teacher</span><br><span class="line">&#123;</span><br><span class="line">// type 为0表示该老师是借，1则是还</span><br><span class="line">int type;</span><br><span class="line">// time 表示老师借或者还钥匙的时间</span><br><span class="line">int time;</span><br><span class="line">// key 表示该钥匙的编号</span><br><span class="line">int key;</span><br><span class="line">&#125;t;</span><br><span class="line"></span><br><span class="line">t teacher[2002];</span><br><span class="line"></span><br><span class="line">bool Compare(t a,t b)</span><br><span class="line">&#123;</span><br><span class="line">// return a.time &lt; b.time;</span><br><span class="line">if (a.time &lt; b.time)</span><br><span class="line">&#123;</span><br><span class="line">// 首先按使用时间排序</span><br><span class="line">return a.time &gt; b.time;</span><br><span class="line">&#125;</span><br><span class="line">else if (a.time == b.time)</span><br><span class="line">&#123;</span><br><span class="line">// 时间相同则还钥匙在前</span><br><span class="line">if (a.type &lt; b.type)</span><br><span class="line">&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">else if (a.type == 1 &amp;&amp; b.type == 1)</span><br><span class="line">&#123;</span><br><span class="line">// 同时有多把钥匙要还则按钥匙编号从小到大顺序还</span><br><span class="line">return a.key &gt; b.key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void KeyFunction(int key_num,int teacher_num)</span><br><span class="line">&#123;</span><br><span class="line">int i,j,k;</span><br><span class="line">for (i=teacher_num*2;i&gt;=1;i--)</span><br><span class="line">&#123;</span><br><span class="line">if (teacher[i].type == 0)</span><br><span class="line">&#123;</span><br><span class="line">for (j=1;j&lt;=key_num;j++)</span><br><span class="line">&#123;</span><br><span class="line">if (teacher[i].key == key[j])</span><br><span class="line">&#123;</span><br><span class="line">key[j] = 0;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else if (teacher[i].type == 1)</span><br><span class="line">&#123;</span><br><span class="line">for (j=1;j&lt;=key_num;j++)</span><br><span class="line">&#123;</span><br><span class="line">if (key[j] == 0)</span><br><span class="line">&#123;</span><br><span class="line">key[j] = teacher[i].key;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main ()</span><br><span class="line">&#123;</span><br><span class="line">// 钥匙数量，老师数量</span><br><span class="line">int key_num,teacher_num;</span><br><span class="line">cin&gt;&gt;key_num&gt;&gt;teacher_num;</span><br><span class="line"></span><br><span class="line">int i,j,k;</span><br><span class="line">for (i=1;i&lt;=key_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">key[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">int a,b,c;</span><br><span class="line">for (i=1;i&lt;=teacher_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">teacher[i*2 - 1].type = 0;</span><br><span class="line">teacher[i*2 - 1].time = b;</span><br><span class="line">teacher[i*2 - 1].key = a;</span><br><span class="line">teacher[i*2].type = 1;</span><br><span class="line">teacher[i*2].time = b+c;</span><br><span class="line">teacher[i*2].key = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// cout&lt;&lt;endl;</span><br><span class="line">// for (i=1;i&lt;=teacher_num*2;i++)</span><br><span class="line">// &#123;</span><br><span class="line">// cout&lt;&lt;teacher[i].type&lt;&lt;&quot; &quot;&lt;&lt;teacher[i].time&lt;&lt;&quot; &quot;&lt;&lt;teacher[i].key&lt;&lt;endl;</span><br><span class="line">// &#125;</span><br><span class="line">// cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">sort(teacher + 1,teacher + teacher_num*2 + 1,Compare);</span><br><span class="line"></span><br><span class="line">// for (i=1;i&lt;=teacher_num*2;i++)</span><br><span class="line">// &#123;</span><br><span class="line">// cout&lt;&lt;teacher[i].type&lt;&lt;&quot; &quot;&lt;&lt;teacher[i].time&lt;&lt;&quot; &quot;&lt;&lt;teacher[i].key&lt;&lt;endl;</span><br><span class="line">// &#125;</span><br><span class="line">// cout&lt;&lt;endl;</span><br><span class="line">KeyFunction(key_num,teacher_num);</span><br><span class="line"></span><br><span class="line">for (i=1;i&lt;=key_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;key[i]&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="csp" scheme="https://cwhong.top/tags/csp/"/>
    
  </entry>
  
  <entry>
    <title>csp-2014-12-02-Z字形扫描</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/csp-2014-12-02Z%E5%AD%97%E5%BD%A2%E6%89%AB%E6%8F%8F/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/csp-2014-12-02Z字形扫描/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:09:42.202Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Program-Description"><a href="#一、Program-Description" class="headerlink" title="一、Program Description"></a>一、Program Description</h3><blockquote><p>| 201412-2 |<br>| 试题名称： | Z字形扫描 |<br>| 时间限制： | 2.0s |<br>| 内存限制： | 256.0MB |<br>| 问题描述： |<br>&nbsp;<br>问题描述<br>&nbsp;<br>　　在图像编码的算法中，需要将一个给定的方形矩阵进行Z字形扫描(Zigzag Scan)。给定一个n×n的矩阵，Z字形扫描的过程如下图所示：<br><img src="https://upload-images.jianshu.io/upload_images/12110500-7dc287fa4ff0855e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>&nbsp;<br>　　对于下面的4×4的矩阵，<br>　　1 5 3 9<br>　　3 7 5 6<br>　　9 4 6 4<br>　　7 3 1 3<br>　　对其进行Z字形扫描后得到长度为16的序列：<br>　　1 5 3 9 7 3 9 5 4 7 3 6 6 4 1 3<br>　　请实现一个Z字形扫描的程序，给定一个n×n的矩阵，输出对这个矩阵进行Z字形扫描的结果。<br>&nbsp;<br>输入格式<br>&nbsp;<br>　　输入的第一行包含一个整数n，表示矩阵的大小。<br>　　输入的第二行到第n+1行每行包含n个正整数，由空格分隔，表示给定的矩阵。<br>&nbsp;<br>输出格式<br>&nbsp;<br>　　输出一行，包含n×n个整数，由空格分隔，表示输入的矩阵经过Z字形扫描后的结果。<br>&nbsp;<br>样例输入<br>&nbsp;<br>4<br>1 5 3 9<br>3 7 5 6<br>9 4 6 4<br>7 3 1 3<br>&nbsp;<br>样例输出<br>&nbsp;<br>1 5 3 9 7 3 9 5 4 7 3 6 6 4 1 3<br>&nbsp;<br>评测用例规模与约定<br>&nbsp;<br>　　1≤n≤500，矩阵元素为不超过1000的正整数。</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>注：图中同一斜线上的点x与y坐标之和相同</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">/*****************************************</span><br><span class="line">Filename:Main</span><br><span class="line">Author:cwhong</span><br><span class="line">Date:2018.05.25</span><br><span class="line">Description:csp2014-12-02,由图可知在同一斜线上行与列之和相同</span><br><span class="line">******************************************/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int map[501][501];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">// 定义矩阵大小</span><br><span class="line">int input_num;</span><br><span class="line">cin&gt;&gt;input_num;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 输入给定的矩阵</span><br><span class="line">int i,j;</span><br><span class="line">for (i=1;i&lt;=input_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">for (j=1;j&lt;=input_num;j++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;map[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 进行Z字形扫描</span><br><span class="line">int t = 2;</span><br><span class="line">// 立一个标志，表示斜线的方向，0为右上左下，1则相反</span><br><span class="line">int flag = 0;</span><br><span class="line">if (t == 2)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;map[1][1]&lt;&lt;&quot; &quot;;</span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line">for (t;t &lt;= 2 * input_num;t++)</span><br><span class="line">&#123;</span><br><span class="line">if (flag == 0)</span><br><span class="line">&#123;</span><br><span class="line">for (i=1;i&lt;t;i++)</span><br><span class="line">&#123;</span><br><span class="line">if (i &lt;= input_num &amp;&amp; t - i &lt;= input_num)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;map[i][t-i]&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag = 1;</span><br><span class="line">&#125;</span><br><span class="line">else if (flag == 1)</span><br><span class="line">&#123;</span><br><span class="line">for (i=1;i&lt;t;i++)</span><br><span class="line">&#123;</span><br><span class="line">if (i &lt;= input_num &amp;&amp; t - i &lt;= input_num)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;map[t-i][i]&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag = 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Program-Description&quot;&gt;&lt;a href=&quot;#一、Program-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Program Description&quot;&gt;&lt;/a&gt;一、Program
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="csp" scheme="https://cwhong.top/tags/csp/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1003-Max-Sum</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1003-Max-Sum/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1003-Max-Sum/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:08:39.324Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>Given a sequence a[1],a[2],a[3]……a[n], your job is to calculate the max sum of a sub-sequence. For example, given (6,-1,5,4,-7), the max sum in this sequence is 6 + (-1) + 5 + 4 = 14.<br>&nbsp;<br>Input<br>The first line of the input contains an integer T(1&lt;=T&lt;=20) which means the number of test cases. Then T lines follow, each line starts with a number N(1&lt;=N&lt;=100000), then N integers followed(all the integers are between -1000 and 1000).<br>&nbsp;<br>Output<br>For each test case, you should output two lines. The first line is “Case #:”, # means the number of the test case. The second line contains three integers, the Max Sum in the sequence, the start position of the sub-sequence, the end position of the sub-sequence. If there are more than one result, output the first one. Output a blank line between two cases.<br>&nbsp;<br>Sample Input<br>2 5 6 -1 5 4 -7 7 0 6 -1 1 -6 7 -5<br>&nbsp;<br>Sample Output<br>Case 1: 14 1 4 Case 2:<br>7 1 6</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>贪心问题，计算最大子序列，计算以每个节点为终点的最大子序列，若前一个节点最大子序列和为负则当前节点最大子序列和为其本身，否则当前节点加上前一节点的最大子序列和</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.18</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:杭电acm1003</span><br><span class="line"> *  Max Sum     贪心算法，计算每一个点做为终点的最大子序列和</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1003</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int T = input.nextInt();</span><br><span class="line"></span><br><span class="line">        for (int i=0;i&lt;T;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int N = input.nextInt();</span><br><span class="line"></span><br><span class="line">            int[] num_N = new int[N];</span><br><span class="line">            // 输入数列</span><br><span class="line">            for (int j=0;j&lt;N;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                num_N[j] = input.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            int[][] result = new int[N+1][3];</span><br><span class="line">            result[0][0] = num_N[0];</span><br><span class="line">            result[0][1] = 1;</span><br><span class="line">            result[0][2] = 1;</span><br><span class="line">            result[N][0] = num_N[0];</span><br><span class="line">            result[N][1] = 1;</span><br><span class="line">            result[N][2] = 1;</span><br><span class="line">            for (int j=1;j&lt;N;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (result[j-1][0] &lt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    result[j][0] = num_N[j];</span><br><span class="line">                    result[j][1] = j+1;</span><br><span class="line">                    result[j][2] = j+1;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    result[j][0] = result[j-1][0] + num_N[j];</span><br><span class="line">                    result[j][1] = result[j-1][1];</span><br><span class="line">                    result[j][2] = j+1;</span><br><span class="line">                &#125;</span><br><span class="line">                if (result[N][0] &lt;= result[j][0])</span><br><span class="line">                &#123;</span><br><span class="line">                    result[N][0] = result[j][0];</span><br><span class="line">                    result[N][1] = result[j][1];</span><br><span class="line">                    result[N][2] = result[j][2];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;Case &quot; + (i+1) + &quot;:&quot;);</span><br><span class="line">            System.out.println(result[N][0] + &quot; &quot; +result[N][1]</span><br><span class="line">                + &quot; &quot; + result[N][2]);</span><br><span class="line">            if (i&lt;T-1)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1009-FatMouse&#39;Trade</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1009-FatMouse&#39;Trade/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1009-FatMouse&#39;Trade/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:08:12.643Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>FatMouse prepared M pounds of cat food, ready to trade with the cats guarding the warehouse containing his favorite food, JavaBean.<br>The warehouse has N rooms. The i-th room contains J[i] pounds of JavaBeans and requires F[i] pounds of cat food. FatMouse does not have to trade for all the JavaBeans in the room, instead, he may get J[i]* a% pounds of JavaBeans if he pays F[i]* a% pounds of cat food. Here a is a real number. Now he is assigning this homework to you: tell him the maximum amount of JavaBeans he can obtain.<br>&nbsp;<br>Input<br>The input consists of multiple test cases. Each test case begins with a line containing two non-negative integers M and N. Then N lines follow, each contains two non-negative integers J[i] and F[i] respectively. The last test case is followed by two -1’s. All integers are not greater than 1000.<br>&nbsp;<br>Output<br>For each test case, print in a single line a real number accurate up to 3 decimal places, which is the maximum amount of JavaBeans that FatMouse can obtain.<br>&nbsp;<br>Sample Input<br>5 3<br>7 2<br>4 3<br>5 2<br>20 3<br>25 18<br>24 15<br>15 10<br>-1 -1<br>&nbsp;<br>Sample Output<br>13.333<br>31.500</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>贪心问题，主要就是先排序</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.14</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:acm1099</span><br><span class="line"> *  FatMouse&apos; Trade</span><br><span class="line"> */  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;  </span><br><span class="line">import java.text.DecimalFormat;  </span><br><span class="line"></span><br><span class="line">public class acm1009  </span><br><span class="line">&#123;  </span><br><span class="line">    public static void main(String[] args)  </span><br><span class="line">    &#123;  </span><br><span class="line">        Scanner input = new Scanner(System.in);  </span><br><span class="line">        DecimalFormat df = new DecimalFormat(&quot;0.000&quot;);  </span><br><span class="line"></span><br><span class="line">        int catf_num;  </span><br><span class="line">        int room_num;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; result = new ArrayList&lt;String&gt;();  </span><br><span class="line">        while ((catf_num = input.nextInt()) != -1 &amp;&amp; (room_num = input.nextInt()) != -1)  </span><br><span class="line">        &#123;  </span><br><span class="line">            double[][] source = new double[room_num][2];  </span><br><span class="line">            double[] persent = new double[room_num];  </span><br><span class="line">            for (int i=0;i&lt;room_num;i++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                source[i][0] = input.nextDouble();  </span><br><span class="line">                source[i][1] = input.nextDouble();  </span><br><span class="line">                persent[i] = source[i][0]/source[i][1];  </span><br><span class="line">            &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            sortArray(source,persent);  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            double getNum = 0.0;  </span><br><span class="line">            for (int i=persent.length-1;i&gt;=0;i--)  </span><br><span class="line">            &#123;  </span><br><span class="line">                // int n = map.get(persent[i]);  </span><br><span class="line">                if (source[i][1] &lt;= catf_num)  </span><br><span class="line">                &#123;  </span><br><span class="line">                    getNum += source[i][0];  </span><br><span class="line">                    catf_num -= source[i][1];  </span><br><span class="line">                &#125;  </span><br><span class="line">                else  </span><br><span class="line">                &#123;  </span><br><span class="line">                    getNum += catf_num * persent[i];  </span><br><span class="line">                    break;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line"></span><br><span class="line">            System.out.printf(&quot;%.3f&quot;,getNum);  </span><br><span class="line">            System.out.println();  </span><br><span class="line"></span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    //对输入的resource进行排序  </span><br><span class="line">    public static void sortArray(int[][] source,double[] persent)  </span><br><span class="line">    &#123;  </span><br><span class="line">        boolean flag = true;  </span><br><span class="line">        Double temp;  </span><br><span class="line">        int[] tempArray = new int[2];  </span><br><span class="line">        for (int i = 0;i&lt;persent.length &amp;&amp; flag;i++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            flag = false;  </span><br><span class="line">            for (int j = 0;j&lt;persent.length-i-1;j++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                if (persent[j] &gt; persent[j+1])  </span><br><span class="line">                &#123;  </span><br><span class="line">                    temp = persent[j];  </span><br><span class="line">                    persent[j] = persent[j+1];  </span><br><span class="line">                    persent[j+1] = temp;  </span><br><span class="line"></span><br><span class="line">                    tempArray[0] = source[j][0];  </span><br><span class="line">                    tempArray[1] = source[j][1];  </span><br><span class="line"></span><br><span class="line">                    source[j][0] = source[j+1][0];  </span><br><span class="line">                    source[j][1] = source[j+1][1];  </span><br><span class="line"></span><br><span class="line">                    source[j+1][0] = tempArray[0];  </span><br><span class="line">                    source[j+1][1] = tempArray[1];  </span><br><span class="line"></span><br><span class="line">                    flag = true;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    static void sort(double[] a,double[][] c) &#123;  </span><br><span class="line">        int len = a.length;  </span><br><span class="line">        int low = 0,high = len - 1;  </span><br><span class="line">        quickSort(a,c, low, high);  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    static void quickSort(double[] a, double[][] c,int l ,int h)&#123;  </span><br><span class="line">        if(l&gt;=h)&#123;  </span><br><span class="line">            return;  </span><br><span class="line">        &#125;  </span><br><span class="line">        int low = l;  </span><br><span class="line">        int high = h;  </span><br><span class="line">        double k = a[low];  </span><br><span class="line">        double k2 = c[low][0];  </span><br><span class="line">        double k3 = c[low][1];  </span><br><span class="line">        while(low&lt; high)&#123;  </span><br><span class="line">            //  </span><br><span class="line">            while(high&gt;low&amp;&amp;a[high]&gt;=k)&#123;//寻找元素右边比其小的  </span><br><span class="line">                high --;  </span><br><span class="line">            &#125;  </span><br><span class="line">            a[low] = a[high];//进行交换，K指向high  </span><br><span class="line">            c[low][0] = c[high][0];  </span><br><span class="line">            c[low][1] = c[high][1];  </span><br><span class="line">            while(low&lt;high&amp;&amp;a[low]&lt;=k)&#123;//寻找元素左边比其大的  </span><br><span class="line">                low++;  </span><br><span class="line">            &#125;  </span><br><span class="line">            a[high] = a[low];//进行交换，K指向low  </span><br><span class="line">            c[high][0] = c[low][0];  </span><br><span class="line">            c[high][1] = c[low][1];  </span><br><span class="line">        &#125;  </span><br><span class="line">        a[low] = k;//将K赋给low  </span><br><span class="line">        c[low][0] = k2;  </span><br><span class="line">        c[low][1] = k3;  </span><br><span class="line">        quickSort(a, c,l, low-1);  </span><br><span class="line">        quickSort(a, c,low+1, h);  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1010-Tempter-of-the-Bone</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1010-Tempter-of-the-Bone/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1010-Tempter-of-the-Bone/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:07:39.647Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>The doggie found a bone in an ancient maze, which fascinated him a lot. However, when he picked it up, the maze began to shake, and the doggie could feel the ground sinking. He realized that the bone was a trap, and he tried desperately to get out of this maze.<br>&nbsp;<br>The maze was a rectangle with sizes N by M. There was a door in the maze. At the beginning, the door was closed and it would open at the T-th second for a short period of time (less than 1 second). Therefore the doggie had to arrive at the door on exactly the T-th second. In every second, he could move one block to one of the upper, lower, left and right neighboring blocks. Once he entered a block, the ground of this block would start to sink and disappear in the next second. He could not stay at one block for more than one second, nor could he move into a visited block. Can the poor doggie survive? Please help him.<br> &nbsp;<br>Input<br>The input consists of multiple test cases. The first line of each test case contains three integers N, M, and T (1 &lt; N, M &lt; 7; 0 &lt; T &lt; 50), which denote the sizes of the maze and the time at which the door will open, respectively. The next N lines give the maze layout, with each line containing M characters. A character is one of the following:<br>&nbsp;<br>‘X’: a block of wall, which the doggie cannot enter;<br>‘S’: the start point of the doggie;<br>‘D’: the Door; or<br>‘.’: an empty block.<br>&nbsp;<br>The input is terminated with three 0’s. This test case is not to be processed.<br> &nbsp;<br>Output<br>For each test case, print in one line “YES” if the doggie can survive, or “NO” otherwise.<br> &nbsp;<br>Sample Input<br>4 4 5 S.X. ..X. ..XD …. 3 4 5 S.X. ..X. …D 0 0 0<br> &nbsp;<br>Sample Output<br>NO<br>YES</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>典型的深度搜索问题，使用dfs算法求解</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">package acm1010;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * date:2017.11.23</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function: 杭电acm1010</span><br><span class="line"> *  Tempter of the Bone     深度搜索    bfs</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">class Node</span><br><span class="line">&#123;</span><br><span class="line">    int row,column;</span><br><span class="line"></span><br><span class="line">    public Node(int row,int column)</span><br><span class="line">    &#123;</span><br><span class="line">        this.row = row;</span><br><span class="line">        this.column = column;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Node()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static int n,m,T;</span><br><span class="line">    public static boolean visit[][];</span><br><span class="line">    public static int dir[][] = &#123;&#123;1,0&#125;,&#123;-1,0&#125;,&#123;0,1&#125;,&#123;0,-1&#125;&#125;;</span><br><span class="line">    public static boolean yes;</span><br><span class="line">    public static Node start = new Node();</span><br><span class="line">    public static Node end = new Node();</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        while (input.hasNextLine())</span><br><span class="line">        &#123;</span><br><span class="line">            n = input.nextInt();</span><br><span class="line">            m = input.nextInt();</span><br><span class="line">            T = input.nextInt();</span><br><span class="line">            input.nextLine();</span><br><span class="line"></span><br><span class="line">            if (n == 0 &amp;&amp; m == 0 &amp;&amp; T == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            visit = new boolean[n][m];</span><br><span class="line">            yes = false;</span><br><span class="line"></span><br><span class="line">            int wall = 0;</span><br><span class="line">            //  输入</span><br><span class="line">            for (int i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                String str = input.nextLine();</span><br><span class="line">                for (int j=0;j&lt;m;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    char c = str.charAt(j);</span><br><span class="line">                    switch(c)</span><br><span class="line">                    &#123;</span><br><span class="line">                        case &apos;X&apos;:visit[i][j] = true;</span><br><span class="line">                            wall++;break;</span><br><span class="line">                        case &apos;S&apos;:start = new Node(i,j);break;</span><br><span class="line">                        case &apos;D&apos;:end = new Node(i,j);break;</span><br><span class="line">                        case &apos;.&apos;:break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (T&gt;n*m - wall - 1)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;NO&quot;);</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            visit[start.row][start.column] = true;</span><br><span class="line">            dfs(start.row,start.column,0);</span><br><span class="line">            if (yes)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;YES&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;NO&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void dfs(int row,int column,int time)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i=0;i&lt;dir.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int a = row + dir[i][0];</span><br><span class="line">            int b = column + dir[i][1];//   往各个方向搜索</span><br><span class="line">            int thetime = time + 1;</span><br><span class="line">            if (thetime &gt;T)</span><br><span class="line">            &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (a&lt;0 || a&gt;=n || b&lt;0 || b&gt;=m)</span><br><span class="line">            &#123;   //  越界</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (visit[a][b] == true)</span><br><span class="line">            &#123;   // 被访问过</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (a == end.row &amp;&amp; b == end.column)</span><br><span class="line">            &#123;   // 当访问到终点时</span><br><span class="line">                if (thetime == T)</span><br><span class="line">                &#123;</span><br><span class="line">                    yes = true;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //  每次递归都进行剪枝运算</span><br><span class="line">            int temp = T - thetime - Math.abs(a - end.row) - Math.abs(b - end.column);</span><br><span class="line">            if (temp % 2 == 1)</span><br><span class="line">            &#123;   // 当剪枝结果为奇数时，在该点无法在指定时间到达终点</span><br><span class="line">                //  此时没必要在这点进行递归，当返回上层递归往另一个方向</span><br><span class="line">                //  继续</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            visit[a][b] = true;</span><br><span class="line">            dfs(a,b,thetime);</span><br><span class="line">            //  同一个点在不同路径中可能被再次访问，因此</span><br><span class="line">            //  每一个路径中对应不同的visit</span><br><span class="line">            visit[a][b] = false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1022-Train-Problem-I</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1022-Train-Problem-I/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1022-Train-Problem-I/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:07:11.778Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>As the new term comes, the Ignatius Train Station is very busy nowadays. A lot of student want to get back to school by train(because the trains in the Ignatius Train Station is the fastest all over the world ^v^). But here comes a problem, there is only one railway where all the trains stop. So all the trains come in from one side and get out from the other side. For this problem, if train A gets into the railway first, and then train B gets into the railway before train A leaves, train A can’t leave until train B leaves. The pictures below figure out the problem. Now the problem for you is, there are at most 9 trains in the station, all the trains has an ID(numbered from 1 to n), the trains get into the railway in an order O1, your task is to determine whether the trains can get out in an order O2.<br><img src="http://upload-images.jianshu.io/upload_images/12110500-d17d643a946eb725.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"><br><img src="https://upload-images.jianshu.io/upload_images/12110500-29de1119f7725bae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="http://upload-images.jianshu.io/upload_images/12110500-61746da88ad893e4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"><br>&nbsp;<br>Input<br>&nbsp;<br>The input contains several test cases. Each test case consists of an integer, the number of trains, and two strings, the order of the trains come in:O1, and the order of the trains leave:O2. The input is terminated by the end of file. More details in the Sample Input.<br>&nbsp;<br>Output<br>&nbsp;<br>The output contains a string “No.” if you can’t exchange O2 to O1, or you should output a line contains “Yes.”, and then output your way in exchanging the order(you should output “in” for a train getting into the railway, and “out” for a train getting out of the railway). Print a line contains “FINISH” after each test case. More details in the Sample Output.<br>&nbsp;<br>Sample Input<br>&nbsp;<br>3 123 321 3 123 312<br>&nbsp;<br>Sample Output<br>&nbsp;<br>Yes. in in in out out out FINISH No. FINISH<br>&nbsp;<br><em>Hint</em><br>&nbsp;<br>Hint&nbsp;<br>For the first Sample Input, we let train 1 get in, then train 2 and train 3. So now train 3 is at the top of the railway, so train 3 can leave first, then train 2 and train 1. In the second Sample input, we should let train 3 leave first, so we have to let train 1 get in, then train 2 and train 3. Now we can let train 3 leave. But after that we can’t let train 1 leave before train 2, because train 2 is at the top of the railway at the moment.<br>&nbsp;<br>So we output “No.”.</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>//栈和队列的使用</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">*date:2017.11.09</span><br><span class="line">*author:孟小德</span><br><span class="line">*function:蓝桥杯试题</span><br><span class="line">*   模拟栈</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1022</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;int[]&gt; resultList = new ArrayList&lt;int[]&gt;();</span><br><span class="line">        while (input.hasNextInt())</span><br><span class="line">        &#123;</span><br><span class="line">            int num = input.nextInt();</span><br><span class="line"></span><br><span class="line">            String pushstring = input.next();</span><br><span class="line">            String popstring = input.next();</span><br><span class="line"></span><br><span class="line">            String[] pushStr = new String[num];</span><br><span class="line">            String[] popStr = new String[num];</span><br><span class="line">            Stack&lt;String&gt; stack = new Stack&lt;String&gt;();</span><br><span class="line">            int[] result = new int[2*num + 1];</span><br><span class="line"></span><br><span class="line">            //分割字符串</span><br><span class="line">            for (int i=0;i&lt;num;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                pushStr[i] = pushstring.substring(i,i+1);</span><br><span class="line">                popStr[i] = popstring.substring(i,i+1);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            result[0] = 1;</span><br><span class="line">            int pop_index = 0;</span><br><span class="line">            int push_index = 0;</span><br><span class="line">            int j = 1;</span><br><span class="line">            while (pop_index != num)</span><br><span class="line">            &#123;</span><br><span class="line">                if (stack.empty() == true &amp;&amp; push_index != num)</span><br><span class="line">                &#123;</span><br><span class="line">                    stack.push(pushStr[push_index]);</span><br><span class="line">                    push_index++;</span><br><span class="line">                    result[j] = 1;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">                else if (stack.empty() == false &amp;&amp; push_index !=num)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (popStr[pop_index].equals(stack.peek()))</span><br><span class="line">                    &#123;</span><br><span class="line">                        stack.pop();</span><br><span class="line">                        pop_index++;</span><br><span class="line">                        result[j] = -1;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        stack.push(pushStr[push_index]);</span><br><span class="line">                        push_index++;</span><br><span class="line">                        result[j] = 1;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else if (stack.empty() == false &amp;&amp; push_index ==num)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (popStr[pop_index].equals(stack.peek()))</span><br><span class="line">                    &#123;</span><br><span class="line">                        stack.pop();</span><br><span class="line">                        pop_index++;</span><br><span class="line">                        result[j] = -1;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        result[0] = 0;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            resultList.add(result);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        //输出结果</span><br><span class="line">        for (int k = 0;k&lt;resultList.size();k++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            if (resultList.get(k)[0] == 1)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;Yes.&quot;);</span><br><span class="line">                for (int i=1;i&lt;resultList.get(k).length;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (resultList.get(k)[i] == 1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        System.out.println(&quot;in&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        System.out.println(&quot;out&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;No.&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;FINISH&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1026-Ignatius-and-the-Princess</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1026-Ignatius-and-the-Princess-I/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1026-Ignatius-and-the-Princess-I/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:06:38.606Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>The Princess has been abducted by the BEelzebub feng5166, our hero Ignatius has to rescue our pretty Princess. Now he gets into feng5166’s castle. The castle is a large labyrinth. To make the problem simply, we assume the labyrinth is a N<em>M two-dimensional array which left-top corner is (0,0) and right-bottom corner is (N-1,M-1). Ignatius enters at (0,0), and the door to feng5166’s room is at (N-1,M-1), that is our target. There are some monsters in the castle, if Ignatius meet them, he has to kill them. Here is some rules:<br>&nbsp;<br>1.Ignatius can only move in four directions(up, down, left, right), one step per second. A step is defined as follow: if current position is (x,y), after a step, Ignatius can only stand on (x-1,y), (x+1,y), (x,y-1) or (x,y+1).<br>2.The array is marked with some characters and numbers. We define them like this:<br>. : The place where Ignatius can walk on.<br>X : The place is a trap, Ignatius should not walk on it.<br>n : Here is a monster with n HP(1&lt;=n&lt;=9), if Ignatius walk on it, it takes him n seconds to kill the monster.<br>&nbsp;<br>Your task is to give out the path which costs minimum seconds for Ignatius to reach target position. You may assume that the start position and the target position will never be a trap, and there will never be a monster at the start position.<br>&nbsp;<br>Input<br>The input contains several test cases. Each test case starts with a line contains two numbers N and M(2&lt;=N&lt;=100,2&lt;=M&lt;=100) which indicate the size of the labyrinth. Then a N</em>M two-dimensional array follows, which describe the whole labyrinth. The input is terminated by the end of file. More details in the Sample Input.<br>&nbsp;<br>Output<br>For each test case, you should output “God please help our poor hero.” if Ignatius can’t reach the target position, or you should output “It takes n seconds to reach the target position, let me show you the way.”(n is the minimum seconds), and tell our hero the whole path. Output a line contains “FINISH” after each test case. If there are more than one path, any one is OK in this problem. More details in the Sample Output.<br>&nbsp;<br>Sample Input<br>5 6 .XX.1. ..X.2. 2…X. …XX. XXXXX. 5 6 .XX.1. ..X.2. 2…X. …XX. XXXXX1 5 6 .XX… ..XX1. 2…X. …XX. XXXXX.<br>&nbsp;<br>Sample Output<br>It takes 13 seconds to reach the target position, let me show you the way. 1s:(0,0)-&gt;(1,0) 2s:(1,0)-&gt;(1,1) 3s:(1,1)-&gt;(2,1) 4s:(2,1)-&gt;(2,2) 5s:(2,2)-&gt;(2,3) 6s:(2,3)-&gt;(1,3) 7s:(1,3)-&gt;(1,4) 8s:FIGHT AT (1,4) 9s:FIGHT AT (1,4) 10s:(1,4)-&gt;(1,5) 11s:(1,5)-&gt;(2,5) 12s:(2,5)-&gt;(3,5) 13s:(3,5)-&gt;(4,5) FINISH It takes 14 seconds to reach the target position, let me show you the way. 1s:(0,0)-&gt;(1,0) 2s:(1,0)-&gt;(1,1) 3s:(1,1)-&gt;(2,1) 4s:(2,1)-&gt;(2,2) 5s:(2,2)-&gt;(2,3) 6s:(2,3)-&gt;(1,3) 7s:(1,3)-&gt;(1,4) 8s:FIGHT AT (1,4) 9s:FIGHT AT (1,4) 10s:(1,4)-&gt;(1,5) 11s:(1,5)-&gt;(2,5) 12s:(2,5)-&gt;(3,5) 13s:(3,5)-&gt;(4,5) 14s:FIGHT AT (4,5) FINISH God please help our poor hero.<br>FINISH</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>这道题也是典型的深度搜索问题，要注意的就是在打印结果时从目标节点递归找到起点在依次在退出递归时打印每个节点的信息</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">package acm1026;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * date:2017.11.30;</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function: 杭电acm1026  Ignatius and the Princess I</span><br><span class="line"> *      bfs 广度搜索</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">class Node implements Comparable&lt;Node&gt;</span><br><span class="line">&#123;</span><br><span class="line">    public int x,y,step;</span><br><span class="line">    public Node()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int compareTo(Node object)</span><br><span class="line">    &#123;</span><br><span class="line">        return this.step - object.step;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    //  四个方向</span><br><span class="line">    public static int[][] dir = &#123;&#123;0,1&#125;,&#123;0,-1&#125;,&#123;1,0&#125;,&#123;-1,0&#125;&#125;;</span><br><span class="line">    public static int map[][];</span><br><span class="line">    public static int flag[][];</span><br><span class="line">    public static int blood[][];</span><br><span class="line">    public static int n,m;</span><br><span class="line"></span><br><span class="line">    public static int judge(int x,int y)</span><br><span class="line">    &#123;</span><br><span class="line">        if (x&lt;0 || x&gt;=n || y&lt;0 || y&gt;=m)</span><br><span class="line">        &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if (map[x][y] == -1)</span><br><span class="line">        &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static int BFS()</span><br><span class="line">    &#123;</span><br><span class="line">        PriorityQueue&lt;Node&gt; queue = new PriorityQueue&lt;Node&gt;();</span><br><span class="line">        Node start = new Node();</span><br><span class="line">        Node next = new Node();</span><br><span class="line">        start.x = 0;</span><br><span class="line">        start.y = 0;</span><br><span class="line">        start.step = 0;</span><br><span class="line">        map[0][0] = -1;</span><br><span class="line"></span><br><span class="line">        queue.add(start);</span><br><span class="line">        while(queue.isEmpty() == false)</span><br><span class="line">        &#123;</span><br><span class="line">            start = new Node();</span><br><span class="line">            start = queue.poll();</span><br><span class="line"></span><br><span class="line">            if (start.x == n-1 &amp;&amp; start.y == m-1)</span><br><span class="line">            &#123;</span><br><span class="line">                return start.step;</span><br><span class="line">            &#125;</span><br><span class="line">            for (int i=0;i&lt;4;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                next = new Node();</span><br><span class="line">                next.x = start.x + dir[i][0];</span><br><span class="line">                next.y = start.y + dir[i][1];</span><br><span class="line"></span><br><span class="line">                if (judge(next.x,next.y) == 1)</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                next.step = start.step + 1 + map[next.x][next.y];</span><br><span class="line">                flag[next.x][next.y] = i+1;</span><br><span class="line">                map[next.x][next.y] = -1;</span><br><span class="line">                queue.add(next);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return -1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static int temp;</span><br><span class="line">    public static void print(int x,int y)</span><br><span class="line">    &#123;   //  用递归方法顺序输出</span><br><span class="line">        //  外层递归为路径末尾</span><br><span class="line">        int next_x,next_y;</span><br><span class="line">        if (flag[x][y] == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        next_x = x - dir[flag[x][y] - 1][0];</span><br><span class="line">        next_y = y - dir[flag[x][y] - 1][1];</span><br><span class="line">        print(next_x,next_y);</span><br><span class="line">        temp++;</span><br><span class="line">        System.out.printf(&quot;%ds:(%d,%d)-&gt;(%d,%d)\n&quot;,temp,next_x,next_y,x,y);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 输出战斗过程</span><br><span class="line">        while (blood[x][y] &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            temp++;</span><br><span class="line">            System.out.printf(&quot;%ds:FIGHT AT (%d,%d)\n&quot;,temp,x,y);</span><br><span class="line">            blood[x][y]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        String str = new String();</span><br><span class="line">        int result;</span><br><span class="line">        while (input.hasNextInt())</span><br><span class="line">        &#123;</span><br><span class="line">            n = input.nextInt();</span><br><span class="line">            m = input.nextInt();</span><br><span class="line">            input.nextLine();</span><br><span class="line"></span><br><span class="line">            map = new int[n][m];</span><br><span class="line">            flag = new int[n][m];</span><br><span class="line">            blood = new int[n][m];</span><br><span class="line"></span><br><span class="line">            for (int i=0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                str = input.nextLine();</span><br><span class="line">                for (int j=0;j&lt;m;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    char c = str.charAt(j);</span><br><span class="line">                    if (c == &apos;.&apos;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        map[i][j] = 0;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else if (c == &apos;X&apos;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        map[i][j] = -1;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        map[i][j] = c - &apos;0&apos;;</span><br><span class="line">                        blood[i][j] = c - &apos;0&apos;;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            result = BFS();</span><br><span class="line">            if (result == -1)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;God please help our poor hero.&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.printf(&quot;It takes %d seconds to reach the target position, let me show you the way.\n&quot;,result);</span><br><span class="line"></span><br><span class="line">                temp = 0;</span><br><span class="line">                print(n-1,m-1);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;FINISH&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1062-Text-Reverse</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1062-Text-Reverse/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1062-Text-Reverse/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:03:59.822Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>Ignatius likes to write words in reverse way. Given a single line of text which is written by Ignatius, you should reverse all the words and then output them.<br>&nbsp;<br>Input<br>The input contains several test cases. The first line of the input is a single integer T which is the number of test cases. T test cases follow.<br>Each test case contains a single line with several words. There will be at most 1000 characters in a line.<br>&nbsp;<br>Output<br>For each test case, you should output the text which is processed.<br>&nbsp;<br>Sample Input<br>3 olleh !dlrow m’I morf .udh I ekil .mca<br>&nbsp;<br>Sample Output<br>hello world! I’m from hdu. I like acm.<br>Hint<br>Remember to use getchar() to read ‘\n’ after the interger T, then you may use gets() to read a line and process it.</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>//简单的字符串处理</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.12</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:acm试题1062</span><br><span class="line"> *  Text Reverse 文本倒置</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1062</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int num = input.nextInt();</span><br><span class="line">        input.nextLine();</span><br><span class="line"></span><br><span class="line">        String[] string = new String[num];</span><br><span class="line">        for (int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            string[i] = input.nextLine();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] result = new String[num];</span><br><span class="line">        for (int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            String[] str = string[i].split(&quot; &quot;);    //分割字符串</span><br><span class="line"></span><br><span class="line">            result[i] = stringReverse(str[0]);</span><br><span class="line">            for (int j = 1;j&lt;str.length;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                result[i] = result[i] + &quot; &quot; + stringReverse(str[j]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //末尾空格加上</span><br><span class="line">            int n = string[i].length() - result[i].length();</span><br><span class="line">            for (int j = 0;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                result[i] += &quot; &quot;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i = 0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(result[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //翻转单词字母</span><br><span class="line">    public static String stringReverse(String str)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        if (str.equals(&quot;&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            return &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            String string = String.valueOf(str.charAt(str.length()-1));</span><br><span class="line">            for (int i=str.length()-2;i&gt;=0;i--)</span><br><span class="line">            &#123;</span><br><span class="line">                string += String.valueOf(str.charAt(i));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return string;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1051-Wooden-Sticks</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1051-Wooden-Sticks/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1051-Wooden-Sticks/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:06:09.094Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>There is a pile of n wooden sticks. The length and weight of each stick are known in advance. The sticks are to be processed by a woodworking machine in one by one fashion. It needs some time, called setup time, for the machine to prepare processing a stick. The setup times are associated with cleaning operations and changing tools and shapes in the machine. The setup times of the woodworking machine are given as follows:<br>&nbsp;<br>(a) The setup time for the first wooden stick is 1 minute.<br>(b) Right after processing a stick of length l and weight w , the machine will need no setup time for a stick of length l’ and weight w’ if l&lt;=l’ and w&lt;=w’. Otherwise, it will need 1 minute for setup.<br>&nbsp;<br>You are to find the minimum setup time to process a given pile of n wooden sticks. For example, if you have five sticks whose pairs of length and weight are (4,9), (5,2), (2,1), (3,5), and (1,4), then the minimum setup time should be 2 minutes since there is a sequence of pairs (1,4), (3,5), (4,9), (2,1), (5,2).<br>&nbsp;<br>Input<br>The input consists of T test cases. The number of test cases (T) is given in the first line of the input file. Each test case consists of two lines: The first line has an integer n , 1&lt;=n&lt;=5000, that represents the number of wooden sticks in the test case, and the second line contains n 2 positive integers l1, w1, l2, w2, …, ln, wn, each of magnitude at most 10000 , where li and wi are the length and weight of the i th wooden stick, respectively. The 2n integers are delimited by one or more spaces.<br>&nbsp;<br>Output<br>The output should contain the minimum setup time in minutes, one per line.<br>&nbsp;<br>Sample Input<br>3 5 4 9 5 2 2 1 3 5 1 4 3 2 2 1 1 2 2 3 1 3 2 2 3 1<br>&nbsp;<br>Sample Output<br>2 1 3</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>//贪心问题，先处理最长最重的木头以便一台机器可以处理尽可能多的木头，</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.15</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:杭电acm1051</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1051</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int num = input.nextInt();</span><br><span class="line">        int[] result = new int[num];</span><br><span class="line">        for (int j=0;j&lt;num;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            int wood_num = input.nextInt();</span><br><span class="line">            wood[] array = new wood[wood_num];</span><br><span class="line">            for (int i=0;i&lt;wood_num;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                int len = input.nextInt();</span><br><span class="line">                int weight = input.nextInt();</span><br><span class="line">                array[i] = new wood(len,weight);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            sort(array);</span><br><span class="line">            int use_num = 0;</span><br><span class="line">            result[j] = 0;</span><br><span class="line">            wood temp = new wood();</span><br><span class="line">            while (use_num &lt; wood_num)</span><br><span class="line">            &#123;</span><br><span class="line">                for (int i=0;i&lt;wood_num;i++)</span><br><span class="line">                &#123;   //寻找未处理木头中最长最重的一根</span><br><span class="line">                    if(array[i].use == false)</span><br><span class="line">                    &#123;</span><br><span class="line">                        temp = array[i];</span><br><span class="line"></span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                for (int i=0;i&lt;wood_num;i++)</span><br><span class="line">                &#123;// 寻找可以被同时处理的木头</span><br><span class="line">                    if (array[i].use == false &amp;&amp; array[i].len &lt;= temp.len &amp;&amp;</span><br><span class="line">                    array[i].weight &lt;= temp.weight)</span><br><span class="line">                    &#123;</span><br><span class="line">                        array[i].use = true;</span><br><span class="line">                        use_num++;</span><br><span class="line">                        temp = array[i];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                result[j]++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i=0;i&lt;result.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(result[i]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //按长度排序，长度相同则按重量排序</span><br><span class="line">    public static void sort(wood[] array)</span><br><span class="line">    &#123;</span><br><span class="line">        boolean flag = true;</span><br><span class="line">        wood temp = new wood();</span><br><span class="line">        for (int i = 0;i&lt;array.length &amp;&amp; flag;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = false;</span><br><span class="line">            for (int j = 0;j&lt;array.length-i-1;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (array[j].len &lt; array[j+1].len)</span><br><span class="line">                &#123;</span><br><span class="line">                    temp.len = array[j].len;</span><br><span class="line">                    temp.weight = array[j].weight;</span><br><span class="line"></span><br><span class="line">                    array[j].len = array[j+1].len;</span><br><span class="line">                    array[j].weight = array[j+1].weight;</span><br><span class="line"></span><br><span class="line">                    array[j+1].len = temp.len;</span><br><span class="line">                    array[j+1].weight = temp.weight;</span><br><span class="line">                    flag = true;</span><br><span class="line">                &#125;</span><br><span class="line">                else if (array[j].len == array[j+1].len)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (array[j].weight &lt; array[j+1].weight)</span><br><span class="line">                    &#123;</span><br><span class="line">                        temp.len = array[j].len;</span><br><span class="line">                        temp.weight = array[j].weight;</span><br><span class="line"></span><br><span class="line">                        array[j].len = array[j+1].len;</span><br><span class="line">                        array[j].weight = array[j+1].weight;</span><br><span class="line"></span><br><span class="line">                        array[j+1].len = temp.len;</span><br><span class="line">                        array[j+1].weight = temp.weight;</span><br><span class="line">                        flag = true;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class wood</span><br><span class="line">&#123;</span><br><span class="line">    public int len;</span><br><span class="line">    public int weight;</span><br><span class="line">    public boolean use = false;</span><br><span class="line"></span><br><span class="line">    public wood()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public wood(int len,int weight)</span><br><span class="line">    &#123;</span><br><span class="line">        this.len = len;</span><br><span class="line">        this.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1180-诡异的楼梯</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1180-%E8%AF%A1%E5%BC%82%E7%9A%84%E6%A5%BC%E6%A2%AF/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1180-诡异的楼梯/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:03:24.994Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>Hogwarts正式开学以后,Harry发现在Hogwarts里,某些楼梯并不是静止不动的，相反,他们每隔一分钟就变动一次方向.<br>比如下面的例子里,一开始楼梯在竖直方向,一分钟以后它移动到了水平方向,再过一分钟它又回到了竖直方向.Harry发现对他来说很难找到能使得他最快到达目的地的路线,这时Ron(Harry最好的朋友)告诉Harry正好有一个魔法道具可以帮助他寻找这样的路线,而那个魔法道具上的咒语,正是由你纂写的.<br>&nbsp;<br>Input<br>&nbsp;<br>测试数据有多组，每组的表述如下：<br>第一行有两个数,M和N,接下来是一个M行N列的地图,’<em>‘表示障碍物,’.’表示走廊,’|’或者’-‘表示一个楼梯,并且标明了它在一开始时所处的位置:’|’表示的楼梯在最开始是竖直方向,’-‘表示的楼梯在一开始是水平方向.地图中还有一个’S’是起点,’T’是目标,0&lt;=M,N&lt;=20,地图中不会出现两个相连的梯子.Harry每秒只能停留在’.’或’S’和’T’所标记的格子内.<br>&nbsp;<br>Output<br>&nbsp;<br>只有一行,包含一个数T,表示到达目标的最短时间.<br>注意:Harry只能每次走到相邻的格子而不能斜走,每移动一次恰好为一分钟,并且Harry登上楼梯并经过楼梯到达对面的整个过程只需要一分钟,Harry从来不在楼梯上停留.并且每次楼梯都恰好在Harry移动完毕以后才改变方向.<br>&nbsp;<br>Sample Input<br>&nbsp;<br>5 5 *<em>..T *</em>.</em>. ..|.. .<em>.</em>. S….<br>&nbsp;<br>Sample Output<br>&nbsp;<br>7<br>&nbsp;<br><em>Hint</em><br>&nbsp;<br>Hint<br>&nbsp;<br>地图如下： <img src="http://upload-images.jianshu.io/upload_images/12110500-16db75f159ad2247.gif?imageMogr2/auto-orient/strip" alt="image"></p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>这是一个广度优先搜索问题 其中容易被忽略的一点就是当楼梯不可通过时可以在原地等一秒再通过</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">package acm1180;</span><br><span class="line"></span><br><span class="line"> /**</span><br><span class="line"> * date:2017.12.7</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:    杭电acm1180</span><br><span class="line"> *      诡异的楼梯</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">class Node</span><br><span class="line">&#123;</span><br><span class="line">    int row,column,time;</span><br><span class="line">    public Node(int row,int column,int time)</span><br><span class="line">    &#123;</span><br><span class="line">        this.row = row;</span><br><span class="line">        this.column = column;</span><br><span class="line">        this.time = time;</span><br><span class="line">    &#125;</span><br><span class="line">    public Node(int row,int column)</span><br><span class="line">    &#123;</span><br><span class="line">        this.row = row;</span><br><span class="line">        this.column = column;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static int[][] map;</span><br><span class="line">    public static boolean[][] visit;</span><br><span class="line">    public static int M,N,time;</span><br><span class="line">    public static Node S,T;</span><br><span class="line">    public static int[][] dir = &#123;&#123;-1,0&#125;,&#123;0,1&#125;,&#123;1,0&#125;,&#123;0,-1&#125;&#125;;</span><br><span class="line">    // public static int flag;     //记录前一次的方向</span><br><span class="line"></span><br><span class="line">    public static boolean crossBorder(int r,int c)</span><br><span class="line">    &#123;</span><br><span class="line">        if (r &lt; 1 || c &lt; 1 || r &gt; M || c &gt; N)</span><br><span class="line">        &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        else if (map[r][c] == 0 || visit[r][c] == true)</span><br><span class="line">        &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void BFS()</span><br><span class="line">    &#123;</span><br><span class="line">        Queue&lt;Node&gt; nodeQ = new LinkedList&lt;Node&gt;();</span><br><span class="line">        nodeQ.add(S);</span><br><span class="line">        while (!nodeQ.isEmpty())</span><br><span class="line">        &#123;</span><br><span class="line">            Node curNode = nodeQ.poll();</span><br><span class="line">            if ((curNode.row == T.row) &amp;&amp; (curNode.column == T.column))</span><br><span class="line">            &#123;</span><br><span class="line">                if (curNode.time &lt; time)</span><br><span class="line">                &#123;</span><br><span class="line">                    time = curNode.time;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            for (int i = 0;i&lt;4;i++)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                int r = curNode.row + dir[i][0];</span><br><span class="line">                int c = curNode.column + dir[i][1];</span><br><span class="line">                visit[curNode.row][curNode.column] = true;</span><br><span class="line">                if (!crossBorder(r,c))</span><br><span class="line">                &#123;</span><br><span class="line">                    Node temp;</span><br><span class="line">                    if (map[r][c] == 1)</span><br><span class="line">                    &#123;</span><br><span class="line"></span><br><span class="line">                        temp = new Node(r,c,curNode.time+1);</span><br><span class="line">                        nodeQ.add(temp);</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        while ((curNode.time + i + map[r][c]) % 2 == 0)</span><br><span class="line">                        &#123;</span><br><span class="line">                            curNode.time++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        r += dir[i][0];</span><br><span class="line">                        c += dir[i][1];</span><br><span class="line">                        if (!crossBorder(r,c))</span><br><span class="line">                        &#123;</span><br><span class="line">                            temp = new Node(r,c,curNode.time+1);</span><br><span class="line">                            nodeQ.add(temp);</span><br><span class="line">                        &#125;</span><br><span class="line">                        curNode.time--;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        while (input.hasNextInt())</span><br><span class="line">        &#123;</span><br><span class="line">            M = input.nextInt();    //地图行</span><br><span class="line">            N = input.nextInt();    //地图列</span><br><span class="line">            map = new int[M+1][N+1];    //地图信息</span><br><span class="line">            visit = new boolean[M+1][N+1];  //节点是否访问过</span><br><span class="line"></span><br><span class="line">            input.nextLine();</span><br><span class="line"></span><br><span class="line">            // 输入</span><br><span class="line">            for (int i=0;i&lt;M;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                String str = input.nextLine();</span><br><span class="line">                char c;</span><br><span class="line">                for (int j=0;j&lt;N;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    c = str.charAt(j);</span><br><span class="line">                    switch (c)</span><br><span class="line">                    &#123;</span><br><span class="line">                        case &apos;*&apos;:</span><br><span class="line">                            map[i+1][j+1] = 0;</span><br><span class="line">                            visit[i+1][j+1] = true;</span><br><span class="line">                            break;</span><br><span class="line">                        case &apos;.&apos;:</span><br><span class="line">                            map[i+1][j+1] = 1;</span><br><span class="line">                            visit[i+1][j+1] = false;</span><br><span class="line">                            break;</span><br><span class="line">                        case &apos;-&apos;:</span><br><span class="line">                            map[i+1][j+1] = -2;     //时间加上此处的值对2取模，</span><br><span class="line">                            visit[i+1][j+1] = false;</span><br><span class="line">                            break;</span><br><span class="line">                        case &apos;|&apos;:</span><br><span class="line">                            map[i+1][j+1] = -1;     //若值为1则楼梯竖，否则横</span><br><span class="line">                            visit[i+1][j+1] = false;</span><br><span class="line">                            break;</span><br><span class="line">                        case &apos;S&apos;:</span><br><span class="line">                            map[i+1][j+1] = 1;</span><br><span class="line">                            visit[i+1][j+1] = false;</span><br><span class="line">                            S = new Node(i+1,j+1,0);</span><br><span class="line">                            break;</span><br><span class="line">                        case &apos;T&apos;:</span><br><span class="line">                            map[i+1][j+1] = 1;</span><br><span class="line">                            visit[i+1][j+1] = false;</span><br><span class="line">                            T = new Node(i+1,j+1);</span><br><span class="line">                            break;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            time = 100;</span><br><span class="line"></span><br><span class="line">            BFS();</span><br><span class="line">            System.out.println(time);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1052-田忌赛马</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1052-%E7%94%B0%E5%BF%8C%E8%B5%9B%E9%A9%AC/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1052-田忌赛马/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:04:42.756Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>Here is a famous story in Chinese history.<br>&nbsp;<br>“That was about 2300 years ago. General Tian Ji was a high official in the country Qi. He likes to play horse racing with the king and others.”<br>&nbsp;<br>“Both of Tian and the king have three horses in different classes, namely, regular, plus, and super. The rule is to have three rounds in a match; each of the horses must be used in one round. The winner of a single round takes two hundred silver dollars from the loser.”<br>&nbsp;<br>“Being the most powerful man in the country, the king has so nice horses that in each class his horse is better than Tian’s. As a result, each time the king takes six hundred silver dollars from Tian.”<br>&nbsp;<br>“Tian Ji was not happy about that, until he met Sun Bin, one of the most famous generals in Chinese history. Using a little trick due to Sun, Tian Ji brought home two hundred silver dollars and such a grace in the next match.”<br>&nbsp;<br>“It was a rather simple trick. Using his regular class horse race against the super class from the king, they will certainly lose that round. But then his plus beat the king’s regular, and his super beat the king’s plus. What a simple trick. And how do you think of Tian Ji, the high ranked official in China?”<br>&nbsp;<br><img src="http://upload-images.jianshu.io/upload_images/12110500-1f5128115058db62.gif?imageMogr2/auto-orient/strip" alt="image"><br>&nbsp;<br>Were Tian Ji lives in nowadays, he will certainly laugh at himself. Even more, were he sitting in the ACM contest right now, he may discover that the horse racing problem can be simply viewed as finding the maximum matching in a bipartite graph. Draw Tian’s horses on one side, and the king’s horses on the other. Whenever one of Tian’s horses can beat one from the king, we draw an edge between them, meaning we wish to establish this pair. Then, the problem of winning as many rounds as possible is just to find the maximum matching in this graph. If there are ties, the problem becomes more complicated, he needs to assign weights 0, 1, or -1 to all the possible edges, and find a maximum weighted perfect matching…<br>&nbsp;<br>However, the horse racing problem is a very special case of bipartite matching. The graph is decided by the speed of the horses — a vertex of higher speed always beat a vertex of lower speed. In this case, the weighted bipartite matching algorithm is a too advanced tool to deal with the problem.<br>&nbsp;<br>In this problem, you are asked to write a program to solve this special case of matching problem.<br>&nbsp;<br>Input<br>&nbsp;<br>The input consists of up to 50 test cases. Each case starts with a positive integer n (n &lt;= 1000) on the first line, which is the number of horses on each side. The next n integers on the second line are the speeds of Tian’s horses. Then the next n integers on the third line are the speeds of the king’s horses. The input ends with a line that has a single 0 after the last test case.<br>&nbsp;<br>Output<br>&nbsp;<br>For each input case, output a line containing a single number, which is the maximum money Tian Ji will get, in silver dollars.<br>&nbsp;<br>Sample Input<br>&nbsp;<br>3 92 83 71 95 87 74 2 20 20 20 20 2 20 19 22 18 0<br>&nbsp;<br>Sample Output<br>&nbsp;<br>200 0 0</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>田忌赛马，首先用田忌最差的马和国王最差的马比较赢或输都赛一场，若平局则用田忌最好的马与国王最好的马比若赢则赛一场若输则用田忌最差的马与国王最好的赛一场，以这个顺序依次较量，得到最好的结果</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.15</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:杭电acm1052</span><br><span class="line"> *  田忌赛马</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1052</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int num;</span><br><span class="line"></span><br><span class="line">        while((num = input.nextInt()) != 0)</span><br><span class="line">        &#123;</span><br><span class="line">            int[] tian = new int[num];</span><br><span class="line">            int[] king = new int[num];</span><br><span class="line"></span><br><span class="line">            for (int i=0;i&lt;num;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                tian[i] = input.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            for (int i=0;i&lt;num;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                king[i] = input.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Arrays.sort(tian);</span><br><span class="line">            Arrays.sort(king);</span><br><span class="line"></span><br><span class="line">            int win = 0;</span><br><span class="line">            int tian_h = tian.length-1;</span><br><span class="line">            int tian_l = 0;</span><br><span class="line">            int king_h = king.length-1;</span><br><span class="line">            int king_l = 0;</span><br><span class="line"></span><br><span class="line">            while (tian_l &lt;= tian_h)</span><br><span class="line">            &#123;</span><br><span class="line">                if (tian[tian_l] &gt; king[king_l])</span><br><span class="line">                &#123;</span><br><span class="line">                    win ++;</span><br><span class="line">                    tian_l++;</span><br><span class="line">                    king_l++;</span><br><span class="line">                &#125;</span><br><span class="line">                else if (tian[tian_l] &lt; king[king_l])</span><br><span class="line">                &#123;</span><br><span class="line">                    win--;</span><br><span class="line">                    tian_l++;</span><br><span class="line">                    king_h--;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    if (tian[tian_h] &gt; king[king_h])</span><br><span class="line">                    &#123;</span><br><span class="line">                        win++;</span><br><span class="line">                        tian_h--;</span><br><span class="line">                        king_h--;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        if (tian[tian_l] &lt; king[king_h])</span><br><span class="line">                        &#123;</span><br><span class="line">                            win--;</span><br><span class="line">                        &#125;</span><br><span class="line">                        tian_l++;</span><br><span class="line">                        king_h--;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(win * 200);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1232-畅通工程</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1232-%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1232-畅通工程/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:02:53.842Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>某省调查城镇交通状况，得到现有城镇道路统计表，表中列出了每条道路直接连通的城镇。省政府“畅通工程”的目标是使全省任何两个城镇间都可以实现交通（但不一定有直接的道路相连，只要互相间接通过道路可达即可）。问最少还需要建设多少条道路？<br>&nbsp;<br>Input<br>测试输入包含若干测试用例。每个测试用例的第1行给出两个正整数，分别是城镇数目N ( &lt; 1000 )和道路数目M；随后的M行对应M条道路，每行给出一对正整数，分别是该条道路直接连通的两个城镇的编号。为简单起见，城镇从1到N编号。<br>注意:两个城市之间可以有多条道路相通,也就是说<br>3 3<br>1 2<br>1 2<br>2 1<br>这种输入也是合法的<br>当N为0时，输入结束，该用例不被处理。<br>&nbsp;<br>Output<br>对每个测试用例，在1行里输出最少还需要建设的道路数目。<br>&nbsp;<br>Sample Input<br>4 2 1 3 4 3 3 3 1 2 1 3 2 3 5 2 1 2 3 5 999 0 0<br>&nbsp;<br>Sample Output<br>1 0 2<br>998</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>这是一个最小生成树和并查集问题，先使用并查集处理随后在查看有多少未联通的城镇即有多少点的根结点为其本身</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.20</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:杭电acm1232</span><br><span class="line"> *      畅通工程    使用查并集方法</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1232</span><br><span class="line">&#123;</span><br><span class="line">    public static int[] father;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int N,M;</span><br><span class="line">        int result;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        while (input.hasNextInt())</span><br><span class="line">        &#123;</span><br><span class="line">            N = input.nextInt();</span><br><span class="line">            if (N == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            M = input.nextInt();</span><br><span class="line">            father = new int[N+1];</span><br><span class="line">            for (int i=1;i&lt;N+1;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                father[i] = i;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            for (int i=0;i&lt;M;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                int a = input.nextInt();</span><br><span class="line">                int b = input.nextInt();</span><br><span class="line">                union(a,b);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            result = 0;</span><br><span class="line">            //若该树是联通的，那么只有一个节点的父节点是其自身</span><br><span class="line">            for (int i=1;i&lt;N+1;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (father[i] == i)</span><br><span class="line">                &#123;</span><br><span class="line">                    result++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(result - 1);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public static void union(int m,int n)</span><br><span class="line">    &#123;</span><br><span class="line">        //合并集合</span><br><span class="line">        int a = getParent(m);</span><br><span class="line">        int b = getParent(n);</span><br><span class="line"></span><br><span class="line">        if (a!=b)</span><br><span class="line">        &#123;</span><br><span class="line">            father[a] = b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static int getParent(int m)</span><br><span class="line">    &#123;</span><br><span class="line">        //寻找节点的根节点</span><br><span class="line">        while (father[m] != m)</span><br><span class="line">        &#123;</span><br><span class="line">            m = father[m];</span><br><span class="line">        &#125;</span><br><span class="line">        return m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1276-士兵队列训练问题</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1276-%E5%A3%AB%E5%85%B5%E9%98%9F%E5%88%97%E8%AE%AD%E7%BB%83%E9%97%AE%E9%A2%98/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1276-士兵队列训练问题/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:00:44.808Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>某部队进行新兵队列训练，将新兵从一开始按顺序依次编号，并排成一行横队，训练的规则如下：从头开始一至二报数，凡报到二的出列，剩下的向小序号方向靠拢，再从头开始进行一至三报数，凡报到三的出列，剩下的向小序号方向靠拢，继续从头开始进行一至二报数。。。，以后从头开始轮流进行一至二报数、一至三报数直到剩下的人数不超过三人为止。<br>&nbsp;<br>Input<br>本题有多个测试数据组，第一行为组数N，接着为N行新兵人数，新兵人数不超过5000。<br>&nbsp;<br>Output<br>共有N行，分别对应输入的新兵人数，每行输出剩下的新兵最初的编号，编号之间有一个空格。<br>&nbsp;<br>Sample Input<br>2 20 40<br>&nbsp;<br>Sample Output<br>1 7 19 1 19 37</p></blockquote><h3 id="二、Code"><a href="#二、Code" class="headerlink" title="二、Code"></a>二、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.10</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:acm1276</span><br><span class="line"> *  士兵队列问题</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1276</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int num = input.nextInt();</span><br><span class="line">        int[] list_size = new int[num];</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; list = new ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</span><br><span class="line">        for (int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            list.add(new ArrayList&lt;Integer&gt;());</span><br><span class="line">            list_size[i] = input.nextInt();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            assignment(list.get(i),list_size[i]);</span><br><span class="line">            // list_size[i] = input.nextInt();</span><br><span class="line"></span><br><span class="line">            ArrayList&lt;Integer&gt; delete_list = new ArrayList&lt;Integer&gt;();</span><br><span class="line">            while (list.get(i).size() &gt; 4)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                //士兵1 2 报数</span><br><span class="line">                number_off(list.get(i),delete_list,2);</span><br><span class="line"></span><br><span class="line">                //士兵出列</span><br><span class="line">                if (delete_list.size() &gt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    delete(list.get(i),delete_list);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                delete_list.clear();</span><br><span class="line"></span><br><span class="line">                //士兵1 2 3 报数</span><br><span class="line">                if (list.get(i).size() &gt; 4)</span><br><span class="line">                &#123;</span><br><span class="line">                    number_off(list.get(i),delete_list,3);</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 士兵出列</span><br><span class="line">                if (delete_list.size() &gt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    delete(list.get(i),delete_list);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                delete_list.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (list.get(i).size() == 2)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(list.get(i).get(1));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            else if (list.get(i).size() &gt; 2)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(list.get(i).get(1));</span><br><span class="line">                for (int j=2;j&lt;list.get(i).size();j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.print(&quot; &quot; + list.get(i).get(j));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //给list列表赋值下标与值对应，第一个赋值为0</span><br><span class="line">    public static void assignment(ArrayList&lt;Integer&gt; list,int list_size)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i=0;i&lt;=list_size;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //士兵出列</span><br><span class="line">    public static void delete(ArrayList&lt;Integer&gt; list,ArrayList&lt;Integer&gt; delete_list)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i=delete_list.size()-1;i&gt;=0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            int n = delete_list.get(i);</span><br><span class="line">            list.remove(n);</span><br><span class="line">            // System.out.println(delete_list.get(i) + &quot; &quot; + list.size());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //士兵报数</span><br><span class="line">    public static void number_off(ArrayList&lt;Integer&gt; list,</span><br><span class="line">        ArrayList&lt;Integer&gt; delete_list,int n)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i = 1;i&lt;list.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (i%n == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                delete_list.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1257-最少拦截系统</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1257-%E6%9C%80%E5%B0%91%E6%8B%A6%E6%88%AA%E7%B3%BB%E7%BB%9F/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1257-最少拦截系统/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:02:20.774Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>某国为了防御敌国的导弹袭击,发展出一种导弹拦截系统.但是这种导弹拦截系统有一个缺陷:虽然它的第一发炮弹能够到达任意的高度,但是以后每一发炮弹都不能超过前一发的高度.某天,雷达捕捉到敌国的导弹来袭.由于该系统还在试用阶段,所以只有一套系统,因此有可能不能拦截所有的导弹.<br>怎么办呢?多搞几套系统呗!你说说倒蛮容易,成本呢?成本是个大问题啊.所以俺就到这里来求救了,请帮助计算一下最少需要多少套拦截系统.<br>&nbsp;<br>Input<br>输入若干组数据.每组数据包括:导弹总个数(正整数),导弹依此飞来的高度(雷达给出的高度数据是不大于30000的正整数,用空格分隔)<br> &nbsp;<br>Output<br>对应每组数据输出拦截所有导弹最少要配备多少套这种导弹拦截系统.<br>&nbsp;<br>Sample Input<br>8 389 207 155 300 299 170 158 65<br>&nbsp;<br>Sample Output<br>2</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>//这道题其实并不复杂我之前写的时候想复杂了，后来看了同学代码才发现自己想复杂了，其实就是在拦截时能用已有的系统拦截就用已有的系统拦截，如果不能就新加一个系统，在有多个系统时从拦截高度最低的系统开始用</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">package acm1257;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * date:2017.11.15</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:杭电acm1257</span><br><span class="line"> *  最少拦截系统</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int result;</span><br><span class="line">        while (input.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            int num = input.nextInt();</span><br><span class="line">            int gd = input.nextInt(); //  导弹的高度</span><br><span class="line">            //  记录拦截系统</span><br><span class="line">            ArrayList&lt;Integer&gt; syslist = new ArrayList&lt;Integer&gt;();</span><br><span class="line">            syslist.add(gd);</span><br><span class="line">            for (int i=1;i&lt;num;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                gd = input.nextInt();</span><br><span class="line">                boolean flag = false;   //  记录导弹是否被拦截</span><br><span class="line">                for (int j=0;j&lt;syslist.size();j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (gd &lt;= syslist.get(j))</span><br><span class="line">                    &#123;</span><br><span class="line">                        syslist.set(j,gd);</span><br><span class="line">                        flag = true;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (flag == false)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    syslist.add(gd);</span><br><span class="line">                &#125;</span><br><span class="line">                Collections.sort(syslist);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            result = syslist.size();</span><br><span class="line"></span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1548-A-string-lift</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1548-A-string-lift/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1548-A-string-lift/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:00:21.823Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>There is a strange lift.The lift can stop can at every floor as you want, and there is a number Ki(0 &lt;= Ki &lt;= N) on every floor.The lift have just two buttons: up and down.When you at floor i,if you press the button “UP” , you will go up Ki floor,i.e,you will go to the i+Ki th floor,as the same, if you press the button “DOWN” , you will go down Ki floor,i.e,you will go to the i-Ki th floor. Of course, the lift can’t go up high than N,and can’t go down lower than 1. For example, there is a buliding with 5 floors, and k1 = 3, k2 = 3,k3 = 1,k4 = 2, k5 = 5.Begining from the 1 st floor,you can press the button “UP”, and you’ll go up to the 4 th floor,and if you press the button “DOWN”, the lift can’t do it, because it can’t go down to the -2 th floor,as you know ,the -2 th floor isn’t exist.<br>Here comes the problem: when you are on floor A,and you want to go to floor B,how many times at least he has to press the button “UP” or “DOWN”?<br> &nbsp;<br>Input<br>The input consists of several test cases.,Each test case contains two lines.<br>The first line contains three integers N ,A,B( 1 &lt;= N,A,B &lt;= 200) which describe above,The second line consist N integers k1,k2,….kn.<br>A single 0 indicate the end of the input.<br>&nbsp;<br>Output<br>For each case of the input output a interger, the least times you have to press the button when you on floor A,and you want to go to floor B.If you can’t reach floor B,printf “-1”.<br>  &nbsp;<br>Sample Input<br>5 1 5 3 3 1 2 5 0<br>  &nbsp;<br>Sample Output<br>3</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>这道题用广度优先搜索来解，但是应当注意程序中不要出现死循环，队列中不重复添加已有的楼层</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">package acm1548;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * date:2017.12.08</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:    杭电acm1548</span><br><span class="line"> *      A strange lift</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">class Node</span><br><span class="line">&#123;</span><br><span class="line">    int floor,num,time;</span><br><span class="line">    public Node(int floor,int num,int time)</span><br><span class="line">    &#123;</span><br><span class="line">        this.floor = floor;</span><br><span class="line">        this.num = num;</span><br><span class="line">        this.time = time;</span><br><span class="line">    &#125;</span><br><span class="line">    public Node()</span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static int N,A,B;</span><br><span class="line">    public static int[] lift;   //记录电梯每层信息</span><br><span class="line">    public static int[] inflag;</span><br><span class="line"></span><br><span class="line">    public static void BFS()</span><br><span class="line">    &#123;</span><br><span class="line">        Node cur = new Node(A,lift[A],0);</span><br><span class="line">        Queue&lt;Node&gt; nodeQ = new LinkedList&lt;Node&gt;();</span><br><span class="line">        nodeQ.add(cur);</span><br><span class="line">        inflag[A] = 0;</span><br><span class="line">        while (!nodeQ.isEmpty())</span><br><span class="line">        &#123;</span><br><span class="line">            Node nfloor = nodeQ.poll();</span><br><span class="line">            if (nfloor.floor == B)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(nfloor.time);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            if (nfloor.time &gt; N - 1)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(-1);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            int x = nfloor.floor + nfloor.num;</span><br><span class="line">            if (x&lt;=N &amp;&amp; inflag[x] == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                inflag[x] = 1;</span><br><span class="line">                nodeQ.add(new Node(x,lift[x],nfloor.time + 1));</span><br><span class="line">            &#125;</span><br><span class="line">            x = nfloor.floor - nfloor.num;</span><br><span class="line">            if (x&gt;=1 &amp;&amp; inflag[x] == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                inflag[x] = 1;</span><br><span class="line">                nodeQ.add(new Node(x,lift[x],nfloor.time + 1));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(-1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        while ((N = input.nextInt()) != 0)</span><br><span class="line">        &#123;</span><br><span class="line">            A = input.nextInt();</span><br><span class="line">            B = input.nextInt();</span><br><span class="line"></span><br><span class="line">            lift = new int[N+1];</span><br><span class="line">            inflag = new int[N+1];</span><br><span class="line">            for (int i=1;i&lt;=N;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                lift[i] = input.nextInt();</span><br><span class="line">                inflag[i] = 0;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            BFS();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>杭电acm1272-小希的迷宫</title>
    <link href="https://cwhong.top/2018/12/25/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/%E6%9D%AD%E7%94%B5acm1272-%E5%B0%8F%E5%B8%8C%E7%9A%84%E8%BF%B7%E5%AE%AB/"/>
    <id>https://cwhong.top/2018/12/25/程序日记本/杭电acm1272-小希的迷宫/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-27T11:01:34.385Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="一、Problem-Description"><a href="#一、Problem-Description" class="headerlink" title="一、Problem Description"></a>一、Problem Description</h3><blockquote><p>上次Gardon的迷宫城堡小希玩了很久（见Problem B），现在她也想设计一个迷宫让Gardon来走。但是她设计迷宫的思路不一样，首先她认为所有的通道都应该是双向连通的，就是说如果有一个通道连通了房间A和B，那么既可以通过它从房间A走到房间B，也可以通过它从房间B走到房间A，为了提高难度，小希希望任意两个房间有且仅有一条路径可以相通（除非走了回头路）。小希现在把她的设计图给你，让你帮忙判断她的设计图是否符合她的设计思路。比如下面的例子，前两个是符合条件的，但是最后一个却有两种方法从5到达8。<br><img src="http://upload-images.jianshu.io/upload_images/12110500-63fd83c8e5b053e8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"><br>&nbsp;<br>Input<br>&nbsp;<br>输入包含多组数据，每组数据是一个以0 0结尾的整数对列表，表示了一条通道连接的两个房间的编号。房间的编号至少为1，且不超过100000。每两组数据之间有一个空行。<br>整个文件以两个-1结尾。<br>&nbsp;<br>Output<br>&nbsp;<br>对于输入的每一组数据，输出仅包括一行。如果该迷宫符合小希的思路，那么输出”Yes”，否则输出”No”。<br>&nbsp;<br>Sample Input<br>&nbsp;<br>6 8 5 3 5 2 6 4 5 6 0 0 8 1 7 3 6 2 8 9 7 5 7 4 7 8 7 6 0 0 3 8 6 8 6 4 5 3 5 6 5 2 0 0 -1 -1<br>&nbsp;<br>Sample Output<br>&nbsp;<br>Yes Yes No</p></blockquote><h3 id="二、Solution"><a href="#二、Solution" class="headerlink" title="二、Solution"></a>二、Solution</h3><blockquote><p>这是一个联通问题，即判断图是否联通，使用并查集将各点连接在连接过程中若两点有相同的根结点则不连接解决了回路问题，随后统计所有节点中有多少节点其根结点为其本身，若只有一个则所有节点已联通</p></blockquote><h3 id="三、Code"><a href="#三、Code" class="headerlink" title="三、Code"></a>三、Code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * date:2017.11.18</span><br><span class="line"> * author:孟小德</span><br><span class="line"> * function:杭电acm1272</span><br><span class="line"> *      小希的迷宫   使用完全的查并集方法</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class acm1272</span><br><span class="line">&#123;</span><br><span class="line">    public static int[] father = new int[100005];</span><br><span class="line">    public static int[] visit = new int[100005];</span><br><span class="line">    public static boolean flag = true;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int m,n;</span><br><span class="line">        int num;</span><br><span class="line"></span><br><span class="line">        while (input.hasNextInt())</span><br><span class="line">        &#123;</span><br><span class="line">            m = input.nextInt();</span><br><span class="line">            n = input.nextInt();</span><br><span class="line">            if (m == -1 &amp;&amp; n == -1)</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (m == 0 &amp;&amp; n == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;Yes&quot;);</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            //初始化father and visit</span><br><span class="line">            for (int i=1;i&lt;100005;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                father[i] = i;</span><br><span class="line">                visit[i] = 0;</span><br><span class="line">            &#125;</span><br><span class="line">            visit[m] = 1;</span><br><span class="line">            visit[n] = 1;</span><br><span class="line">            flag = true;</span><br><span class="line">            union(m,n);</span><br><span class="line"></span><br><span class="line">            while (input.hasNextInt())</span><br><span class="line">            &#123;</span><br><span class="line">                m = input.nextInt();</span><br><span class="line">                n = input.nextInt();</span><br><span class="line">                if (m == 0&amp;&amp;n == 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                visit[m] = 1;</span><br><span class="line">                visit[n] = 1;</span><br><span class="line">                union(m,n);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            num = 0;</span><br><span class="line">            //若该树是联通的，那么只有一个节点的父节点是其自身</span><br><span class="line">            for (int i=1;i&lt;100005;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (visit[i] == 1 &amp;&amp; father[i] == i)</span><br><span class="line">                &#123;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">                if (num&gt;1)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    flag = false;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (flag == true)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;Yes&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;No&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public static void union(int m,int n)</span><br><span class="line">    &#123;</span><br><span class="line">        //合并集合</span><br><span class="line">        int a = getParent(m);</span><br><span class="line">        int b = getParent(n);</span><br><span class="line"></span><br><span class="line">        if (a!=b)</span><br><span class="line">        &#123;</span><br><span class="line">            father[a] = b;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            flag = false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static int getParent(int m)</span><br><span class="line">    &#123;</span><br><span class="line">        //寻找节点的根节点</span><br><span class="line">        while (father[m] != m)</span><br><span class="line">        &#123;</span><br><span class="line">            m = father[m];</span><br><span class="line">        &#125;</span><br><span class="line">        return m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;一、Problem-Description&quot;&gt;&lt;a href=&quot;#一、Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;一、Problem Description&quot;&gt;&lt;/a&gt;一、Problem
      
    
    </summary>
    
      <category term="程序日记本" scheme="https://cwhong.top/categories/%E7%A8%8B%E5%BA%8F%E6%97%A5%E8%AE%B0%E6%9C%AC/"/>
    
    
      <category term="博客" scheme="https://cwhong.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="acm" scheme="https://cwhong.top/tags/acm/"/>
    
  </entry>
  
</feed>
